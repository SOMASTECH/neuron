{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/components/core/MainLayout/components/StatuBar/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/components/core/MainLayout/components/StatuBar/index.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\nexport default {\n  computed: {\n    ...mapState({\n      status: state => state.Status.status\n    }),\n    commState () {\n      return this.status.model === 'ACTIVE' ? 'OK' : this.status.model\n    },\n    galm () {\n      let res\n      switch (this.status.galm) {\n        case 'NON-EXIST':\n          res = 'NO ALARM'\n          break\n        case 'UNACKNOWLEDGE':\n          res = 'UNACK ALARM'\n          break\n        case 'EXIST':\n          res = 'ALARM'\n          break\n      }\n      return res\n    }\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/core/MainLayout/components/StatuBar","sourcesContent":["<template>\n  <div class=\"statuBar\">\n    <div :class=\"status.comm==='UP'?'green':'red'\">\n      COMM&nbsp;{{status.comm||''}}\n    </div>\n    <div>\n      {{status.mach||''}}\n    </div>\n    <div :class=\"status.mode==='ACTIVE'?'green':status.mach==='STANDBY'?'yellow':'red'\">\n      {{status.mode||''}}\n    </div>\n    <div :class=\"status.mqcn==='MQDISCONNECT'?'red':'green'\">\n      {{status.mqcn||'MQDISCONNECT'}}\n    </div>\n    <div :class=\"galm==='NO ALARM'?'green':'red'\">\n      {{galm}}\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\nexport default {\n  computed: {\n    ...mapState({\n      status: state => state.Status.status\n    }),\n    commState () {\n      return this.status.model === 'ACTIVE' ? 'OK' : this.status.model\n    },\n    galm () {\n      let res\n      switch (this.status.galm) {\n        case 'NON-EXIST':\n          res = 'NO ALARM'\n          break\n        case 'UNACKNOWLEDGE':\n          res = 'UNACK ALARM'\n          break\n        case 'EXIST':\n          res = 'ALARM'\n          break\n      }\n      return res\n    }\n  }\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"@/assets/style/public.scss\";\n.statuBar {\n  position: absolute;\n  bottom: 0;\n  left: 20px;\n  right: 20px;\n  height: 50px;\n  display: flex;\n  div {\n    flex: 1;\n    text-align: center;\n    line-height: 50px;\n    font-size: $font-size-sub;\n    font-weight: normal;\n  }\n  .red {\n    color: $color-danger;\n  }\n  .green {\n    color: $color-success;\n  }\n  .yellow {\n    color: $color-warning;\n  }\n}\n</style>\n"]}]}