{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Administration/newPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Administration/newPassword.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  data () {\n    return {\n      passwordForm: {\n        password: '',\n        newPassword: '',\n        reNewPassword: ''\n      },\n      rules: {\n        password: [{ required: true, message: '', trigger: 'blur' }],\n        newPassword: [{ required: true, message: '', trigger: 'blur' }],\n        reNewPassword: [{ required: true, message: '', trigger: 'blur' }]\n      }\n    }\n  },\n  methods: {\n    submit () {\n      this.$refs.passwordForm.validate((valid) => {\n        if (valid) {\n          const { password, newPassword, reNewPassword } = this.passwordForm\n          const name = JSON.parse(sessionStorage.getItem('user')).name\n          if (newPassword !== reNewPassword) {\n            this.$message.error('error password')\n            return false\n          }\n          this.$ws().set({ success: this.setPassword }).send({ func: 12, name, pass: password, npwd: newPassword })\n        } else {\n          return false\n        }\n      })\n    },\n    setPassword (data) {\n      if (data.func === 12) {\n        this.$ws().remove(this.setPassword)\n        if (!data.errc) {\n          this.$message.success('success')\n        }\n        console.log(data)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["newPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"newPassword.vue","sourceRoot":"src/pages/menus/Administration","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"dd-title\">New Password</div>\n    <el-form :model=\"passwordForm\"\n             :rules='rules'\n             ref=\"passwordForm\"\n             label-width=\"150px\">\n      <el-form-item prop='password'\n                    label=\"password:\">\n        <el-input v-model=\"passwordForm.password\"\n                  show-password\n                  style=\"width:300px\"></el-input>\n      </el-form-item>\n      <el-form-item prop='newPassword'\n                    label=\"newPassword:\">\n        <el-input v-model=\"passwordForm.newPassword\"\n                  show-password\n                  style=\"width:300px\"></el-input>\n      </el-form-item>\n      <el-form-item prop='reNewPassword'\n                    label=\"reNewPassword:\">\n        <el-input v-model=\"passwordForm.reNewPassword\"\n                  show-password\n                  style=\"width:300px\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click='submit'>submit</el-button>\n      </el-form-item>\n    </el-form>\n  </Container>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      passwordForm: {\n        password: '',\n        newPassword: '',\n        reNewPassword: ''\n      },\n      rules: {\n        password: [{ required: true, message: '', trigger: 'blur' }],\n        newPassword: [{ required: true, message: '', trigger: 'blur' }],\n        reNewPassword: [{ required: true, message: '', trigger: 'blur' }]\n      }\n    }\n  },\n  methods: {\n    submit () {\n      this.$refs.passwordForm.validate((valid) => {\n        if (valid) {\n          const { password, newPassword, reNewPassword } = this.passwordForm\n          const name = JSON.parse(sessionStorage.getItem('user')).name\n          if (newPassword !== reNewPassword) {\n            this.$message.error('error password')\n            return false\n          }\n          this.$ws().set({ success: this.setPassword }).send({ func: 12, name, pass: password, npwd: newPassword })\n        } else {\n          return false\n        }\n      })\n    },\n    setPassword (data) {\n      if (data.func === 12) {\n        this.$ws().remove(this.setPassword)\n        if (!data.errc) {\n          this.$message.success('success')\n        }\n        console.log(data)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n</style>\n"]}]}