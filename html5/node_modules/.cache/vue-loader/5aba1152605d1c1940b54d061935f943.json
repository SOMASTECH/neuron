{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Administration/userAdministration.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Administration/userAdministration.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { UserLevels } from '@/config'\nexport default {\n  data () {\n    return {\n      form: {\n        name: '',\n        pass: '',\n        tout: '',\n        alwl: [0],\n        defl: 0\n      },\n      data: UserLevels\n    }\n  },\n  computed: {\n    options () {\n      return UserLevels.filter(i => this.form.alwl.includes(i.key))\n    }\n  },\n  methods: {\n    handleSubmit () {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          if (!this.form.alwl.length) {\n            this.$message.error('select allowed levels')\n            return\n          }\n          this.$ws().set({ success: this.callback }).send({\n            func: 15,\n            'cusr': 1,\n            nalw: this.form.alwl.length,\n            ...this.form,\n            tout: +this.form.tout\n          })\n        }\n      })\n    },\n    handleChange (val) {\n      if (!val.length) {\n        this.form.defl = null\n      } else if (val.length === 1) {\n        this.form.defl = val[0]\n      }\n    },\n    callback (val) {\n      if (val.func === 15) {\n        this.$ws().remove(this.callback)\n        console.log(val)\n      }\n    }\n  }\n}\n",{"version":3,"sources":["userAdministration.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userAdministration.vue","sourceRoot":"src/pages/menus/Administration","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"dd-title\">User Administration</div>\n    <el-button @click='handleSubmit'\n               type='primary'>submit</el-button>\n    <el-form ref=\"userForm\"\n             class=\"dd-mt\"\n             label-width=\"140px\"\n             :model=\"form\">\n      <el-form-item label=\"Neuron user\"\n                    required\n                    prop=\"name\"\n                    class=\"form-item\">\n        <el-input v-model=\"form.name\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Password\"\n                    required\n                    prop=\"pass\"\n                    class=\"form-item\">\n        <el-input v-model=\"form.pass\"></el-input>\n      </el-form-item>\n      <el-form-item label=\"Time-out(min)\"\n                    required\n                    prop=\"tout\"\n                    class=\"form-item\">\n        <el-input v-model=\"form.tout\"></el-input>\n      </el-form-item>\n      <!-- <el-form-item label=\"\"> -->\n      <div class=\"dd-mb dd-ml\">\n        <el-transfer v-model=\"form.alwl\"\n                     @change='handleChange'\n                     :titles='[\"Available levels\",\"Allowed levels\"]'\n                     :data=\"data\"></el-transfer>\n      </div>\n      <!-- </el-form-item> -->\n      <el-form-item label=\"Default login level\"\n                    prop=\"defl\"\n                    required>\n        <el-select v-model=\"form.defl\">\n          <el-option v-for=\"item in options\"\n                     :key=\"item.key\"\n                     :label=\"item.label\"\n                     :value=\"item.key\">\n          </el-option>\n        </el-select>\n      </el-form-item>\n    </el-form>\n  </Container>\n</template>\n\n<script>\nimport { UserLevels } from '@/config'\nexport default {\n  data () {\n    return {\n      form: {\n        name: '',\n        pass: '',\n        tout: '',\n        alwl: [0],\n        defl: 0\n      },\n      data: UserLevels\n    }\n  },\n  computed: {\n    options () {\n      return UserLevels.filter(i => this.form.alwl.includes(i.key))\n    }\n  },\n  methods: {\n    handleSubmit () {\n      this.$refs.userForm.validate(valid => {\n        if (valid) {\n          if (!this.form.alwl.length) {\n            this.$message.error('select allowed levels')\n            return\n          }\n          this.$ws().set({ success: this.callback }).send({\n            func: 15,\n            'cusr': 1,\n            nalw: this.form.alwl.length,\n            ...this.form,\n            tout: +this.form.tout\n          })\n        }\n      })\n    },\n    handleChange (val) {\n      if (!val.length) {\n        this.form.defl = null\n      } else if (val.length === 1) {\n        this.form.defl = val[0]\n      }\n    },\n    callback (val) {\n      if (val.func === 15) {\n        this.$ws().remove(this.callback)\n        console.log(val)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n.form-item {\n  width: 400px;\n}\n</style>\n"]}]}