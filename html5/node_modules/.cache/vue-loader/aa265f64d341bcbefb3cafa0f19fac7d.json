{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Configuration/scriptProgramming.vue?vue&type=style&index=0&id=97e5c12a&scoped=true&lang=scss&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Configuration/scriptProgramming.vue","mtime":1586417712650},{"path":"/home/neuron/build/html5/node_modules/css-loader/index.js","mtime":1578022550180},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1578022550923},{"path":"/home/neuron/build/html5/node_modules/postcss-loader/src/index.js","mtime":1578022550766},{"path":"/home/neuron/build/html5/node_modules/sass-loader/dist/cjs.js","mtime":1578022582167},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/style/public\";\n.scriptTable {\n  /deep/input {\n    border-color: transparent;\n  }\n  /deep/td {\n    padding: 10px 0;\n  }\n}\n.btn {\n  font-size: 24px;\n  .plus {\n    color: $color-primary;\n    cursor: pointer;\n  }\n  .remove {\n    color: $color-danger;\n    cursor: pointer;\n  }\n}\n\n/deep/.el-input-number {\n  width: 100%;\n  .el-input__inner {\n    text-align: left;\n  }\n}\n",{"version":3,"sources":["scriptProgramming.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"scriptProgramming.vue","sourceRoot":"src/pages/menus/Configuration","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"flex\">\n      <div class=\"dd-title\">Script Programming</div>\n      <div class='row'>\n        <ScriptTypeSelect v-model=\"type\"\n                          @delete='init'\n                          @submit=\"submit\" />\n        &nbsp;&nbsp;\n        <el-button class='dd-fr'\n                   type=\"primary\"\n                   @click='handleSubmit'>submit</el-button>\n      </div>\n    </div>\n    <el-table class=\"scriptTable\"\n              :height='tableHeight'\n              :data='scriptData'\n              border>\n      <el-table-column label=\"statement\"\n                       min-width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-select v-model=\"scope.row.stmt\"\n                     @change=\"handleChange($event,scope.$index)\"\n                     clearable\n                     style='width:100%;'>\n            <el-option v-for=\"item in scriptList\"\n                       :key=\"item.val\"\n                       :label=\"item.val\"\n                       :value=\"item.val\">\n            </el-option>\n          </el-select>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"expression\"\n                       min-width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-input placeholder=\"\"\n                    v-model=\"scope.row.expr\">\n          </el-input>\n        </template>\n      </el-table-column>\n      <el-table-column label=\" \"\n                       min-width=\"60\">\n        <template slot-scope=\"scope\">\n          <div class='btn'>\n            <i class=\"el-icon-circle-plus plus\"\n               @click='add(scope.$index)'></i>&nbsp;\n            <i class=\"el-icon-remove remove\"\n               @click='remove(scope.$index)'></i>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog :visible.sync=\"dialogVisible\"\n               title='POS'\n               width=\"300px\"\n               @closed='handleClosed'>\n      <el-input-number v-model=\"pos\"\n                       :min=\"1\"\n                       :max=\"999\"\n                       :controls=\"false\"></el-input-number>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">cancel</el-button>\n        <el-button type=\"primary\"\n                   @click=\"handlePosSubmit\">submit</el-button>\n      </span>\n    </el-dialog>\n  </Container>\n</template>\n\n<script>\nimport indexMixin from '../mixins'\nimport { ScriptList } from '@/config/index'\nimport ScriptTypeSelect from './components/scriptType'\nexport default {\n  mixins: [indexMixin],\n  data () {\n    return {\n      scriptData: [],\n      scriptList: ScriptList,\n      type: {\n        name: '',\n        subr: ''\n      },\n      dialogVisible: false,\n      pos: 0,\n      currentIndex: 0\n    }\n  },\n  methods: {\n    init () {\n      this.scriptData = []\n      let i = 6\n      while (i--) {\n        this.scriptData.push({\n          stmt: '',\n          expr: ''\n        })\n      }\n    },\n    readSubroutine (subr) {\n      this.$ws().set({ success: this.getData }).send({ func: 33, subr: +subr })\n    },\n    getData (data) {\n      if (data.func === 33) {\n        this.$ws().remove(this.getData)\n        if (data.rows) {\n          if (data.rows.length === 0) {\n            this.init()\n          } else {\n            this.scriptData = data.rows\n          }\n        } else {\n          this.init()\n        }\n      }\n    },\n    handlePosSubmit () {\n      this.scriptData[this.currentIndex].stmt = `POS${this.pos}`\n      this.dialogVisible = false\n    },\n    handleChange (e, index) {\n      if (e === 'POS') {\n        this.currentIndex = index\n        this.dialogVisible = true\n      }\n    },\n    handleSubmit () {\n      if (!this.type.subr) {\n        this.$message.error('select a subroutine')\n        return\n      }\n      this.$confirm('Are you sure submit these script programming', 'Submit', {\n        type: 'warning'\n      }).then(() => {\n        const rows = this.scriptData\n        const { name, subr } = this.type\n        this.submit(name, subr, rows)\n      }).catch(() => {\n      })\n    },\n    submit (name, subr, rows) {\n      if (!rows) {\n        rows = []\n      }\n      this.$ws().set().send({\n        func: 34,\n        csub: 0,\n        name,\n        subr: +subr,\n        nrow: rows.length,\n        rows\n      })\n    },\n    handleClosed () {\n      this.currentIndex = 0\n    },\n    add (index) {\n      this.scriptData.splice(index + 1, 0, { stmt: '', expr: '' })\n    },\n    remove (index) {\n      this.scriptData.splice(index, 1)\n    }\n  },\n  watch: {\n    'type.subr' (val) {\n      if (val) {\n        this.readSubroutine(val)\n      }\n    }\n  },\n  computed: {\n    tableHeight () {\n      return window.innerHeight - 60 - 50 - 40 - 50\n    }\n  },\n  components: {\n    ScriptTypeSelect\n  }\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"@/assets/style/public\";\n.scriptTable {\n  /deep/input {\n    border-color: transparent;\n  }\n  /deep/td {\n    padding: 10px 0;\n  }\n}\n.btn {\n  font-size: 24px;\n  .plus {\n    color: $color-primary;\n    cursor: pointer;\n  }\n  .remove {\n    color: $color-danger;\n    cursor: pointer;\n  }\n}\n\n/deep/.el-input-number {\n  width: 100%;\n  .el-input__inner {\n    text-align: left;\n  }\n}\n</style>\n"]}]}