{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Configuration/components/objectSetup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Configuration/components/objectSetup.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ObjectTable from './objectTable'\nimport { mapMutations } from 'vuex'\nexport default {\n  data () {\n    return {\n      dialogTableVisible: false,\n      isDetail: true,\n      objectSetupFrom: {},\n      objectSetupFromRules: {\n        objn: [\n          { required: true, message: 'name is required', trigger: 'blur' },\n          { max: 30, message: 'max 30', trigger: 'blur' }\n        ],\n        obsz: [\n          { required: true, message: 'size is required', trigger: 'blur' }\n        ],\n        updt: [\n          { required: true, message: 'update time is required', trigger: 'blur' }\n        ],\n        logt: [\n          { required: true, message: 'logging time is required', trigger: 'blur' }\n        ],\n        disp: [\n          { required: true, message: 'display is required', trigger: 'blur' }\n        ],\n        logs: [\n          { required: true, message: 'logging is required', trigger: 'blur' }\n        ]\n      },\n      objectIndexSetupList: [],\n      multipleSelection: []\n    }\n  },\n  watch: {\n    'objectSetupFrom.obsz' (val) {\n      let res = []\n      for (let i = 0; i < val; i++) {\n        res.push({\n          obix: i,\n          pref: '',\n          suff: ''\n        })\n      }\n      this.objectIndexSetupList = res\n    }\n  },\n  methods: {\n    submitObjectSetupFrom () {\n      this.$refs.objectSetupFrom.validate((valid) => {\n        if (valid) {\n          this.isDetail = false\n          // alert('submit!')\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    submitObjectDetail () {\n      let list = this.objectIndexSetupList.map(i => i.pref + i.suff)\n      let length = list.length\n      let newLength = [...new Set(list)].length\n      if (length && length === newLength) {\n        this.objectSetupFrom.preAndSuff = this.objectIndexSetupList\n        this.addObjectData(this.objectSetupFrom)\n        this.dialogTableVisible = false\n      } else {\n        this.$message.error(\"Don't repeat\")\n      }\n    },\n    handleCancel () {\n      this.isDetail = true\n      this.objectIndexSetupList = this.objectIndexSetupList.map(i => {\n        i.pref = ''\n        i.suff = ''\n        return i\n      })\n    },\n    handleDelete () {\n      this.$confirm('Are you sure delete these object?', 'delete object', {\n        type: 'warning'\n      }).then(() => {\n        this.deleteObjectData(this.multipleSelection.map(i => i.objn))\n      }).catch(() => {\n      })\n    },\n    close () {\n      this.isDetail = true\n      this.objectSetupFrom = {\n        oatt: []\n      }\n      this.objectIndexSetupList = []\n      this.$refs.objectSetupFrom && this.$refs.objectSetupFrom.clearValidate()\n    },\n    ...mapMutations(['addObjectData', 'deleteObjectData'])\n  },\n  components: {\n    ObjectTable\n  }\n}\n",{"version":3,"sources":["objectSetup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"objectSetup.vue","sourceRoot":"src/pages/menus/Configuration/components","sourcesContent":["<template>\n  <div>\n    <div class=\"dd-mb dd-fr\">\n      <el-button @click='dialogTableVisible=true'\n                 type=\"primary\">Create</el-button>\n      <el-button @click='handleDelete'\n                 type=\"danger\">Delete</el-button>\n    </div>\n    <div class=\"row\">\n      <ObjectTable :showBtn='true'\n                   v-model=\"multipleSelection\" />\n    </div>\n    <el-dialog @closed='close'\n               :title='isDetail?\"Object setup\":\"Object index setup\"'\n               :visible.sync=\"dialogTableVisible\">\n      <div class=\"row\"\n           v-if=\"isDetail\">\n        <el-form ref='objectSetupFrom'\n                 :rules=\"objectSetupFromRules\"\n                 :model=\"objectSetupFrom\"\n                 class=\"dd-mb\"\n                 label-width=\"160px\">\n          <el-form-item label=\"Object name\"\n                        prop=\"objn\">\n            <el-input v-model=\"objectSetupFrom.objn\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"Object size\"\n                        prop=\"obsz\">\n            <el-input-number v-model=\"objectSetupFrom.obsz\"\n                             :controls='false'\n                             :precision='0'\n                             :min=\"1\"\n                             :max=\"9\" />\n          </el-form-item>\n          <el-form-item label=\"Update time\"\n                        prop=\"updt\">\n            <el-input-number v-model=\"objectSetupFrom.updt\"\n                             :controls='false'\n                             :precision='0'\n                             :min=\"0\" />\n          </el-form-item>\n          <el-form-item label=\"Logging time\"\n                        prop=\"logt\">\n            <el-input-number v-model=\"objectSetupFrom.logt\"\n                             :controls='false'\n                             :precision='0'\n                             :min=\"0\" />\n          </el-form-item>\n          <el-form-item label=\"Timestamp Display\"\n                        prop=\"logt\">\n            <el-radio-group v-model=\"objectSetupFrom.tstd\">\n              <el-radio :label=\"1\">Yes</el-radio>\n              <el-radio :label=\"0\">No</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Visible\"\n                        prop=\"disp\">\n            <el-radio-group v-model=\"objectSetupFrom.disp\">\n              <el-radio :label=\"1\">Yes</el-radio>\n              <el-radio :label=\"0\">No</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Logging\"\n                        prop=\"logs\">\n            <el-radio-group v-model=\"objectSetupFrom.logs\">\n              <el-radio :label=\"1\">Yes</el-radio>\n              <el-radio :label=\"0\">No</el-radio>\n            </el-radio-group>\n          </el-form-item>\n        </el-form>\n        <el-button @click='submitObjectSetupFrom'>submit</el-button>\n      </div>\n      <div class=\"row\"\n           v-if=\"objectIndexSetupList.length &&!isDetail\">\n        <el-table :data='objectIndexSetupList'\n                  class=\"dd-mb\"\n                  border>\n          <el-table-column label=\"Index\">\n            <template slot-scope=\"scope\">\n              {{scope.row.obix}}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"Prefix\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.pref\"></el-input>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"Suffix\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.suff\"></el-input>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-button type=\"primary\"\n                   @click=\"submitObjectDetail\">submit</el-button>\n        <el-button @click=\"handleCancel\">cancel</el-button>\n\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport ObjectTable from './objectTable'\nimport { mapMutations } from 'vuex'\nexport default {\n  data () {\n    return {\n      dialogTableVisible: false,\n      isDetail: true,\n      objectSetupFrom: {},\n      objectSetupFromRules: {\n        objn: [\n          { required: true, message: 'name is required', trigger: 'blur' },\n          { max: 30, message: 'max 30', trigger: 'blur' }\n        ],\n        obsz: [\n          { required: true, message: 'size is required', trigger: 'blur' }\n        ],\n        updt: [\n          { required: true, message: 'update time is required', trigger: 'blur' }\n        ],\n        logt: [\n          { required: true, message: 'logging time is required', trigger: 'blur' }\n        ],\n        disp: [\n          { required: true, message: 'display is required', trigger: 'blur' }\n        ],\n        logs: [\n          { required: true, message: 'logging is required', trigger: 'blur' }\n        ]\n      },\n      objectIndexSetupList: [],\n      multipleSelection: []\n    }\n  },\n  watch: {\n    'objectSetupFrom.obsz' (val) {\n      let res = []\n      for (let i = 0; i < val; i++) {\n        res.push({\n          obix: i,\n          pref: '',\n          suff: ''\n        })\n      }\n      this.objectIndexSetupList = res\n    }\n  },\n  methods: {\n    submitObjectSetupFrom () {\n      this.$refs.objectSetupFrom.validate((valid) => {\n        if (valid) {\n          this.isDetail = false\n          // alert('submit!')\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    submitObjectDetail () {\n      let list = this.objectIndexSetupList.map(i => i.pref + i.suff)\n      let length = list.length\n      let newLength = [...new Set(list)].length\n      if (length && length === newLength) {\n        this.objectSetupFrom.preAndSuff = this.objectIndexSetupList\n        this.addObjectData(this.objectSetupFrom)\n        this.dialogTableVisible = false\n      } else {\n        this.$message.error(\"Don't repeat\")\n      }\n    },\n    handleCancel () {\n      this.isDetail = true\n      this.objectIndexSetupList = this.objectIndexSetupList.map(i => {\n        i.pref = ''\n        i.suff = ''\n        return i\n      })\n    },\n    handleDelete () {\n      this.$confirm('Are you sure delete these object?', 'delete object', {\n        type: 'warning'\n      }).then(() => {\n        this.deleteObjectData(this.multipleSelection.map(i => i.objn))\n      }).catch(() => {\n      })\n    },\n    close () {\n      this.isDetail = true\n      this.objectSetupFrom = {\n        oatt: []\n      }\n      this.objectIndexSetupList = []\n      this.$refs.objectSetupFrom && this.$refs.objectSetupFrom.clearValidate()\n    },\n    ...mapMutations(['addObjectData', 'deleteObjectData'])\n  },\n  components: {\n    ObjectTable\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"@/assets/style/public.scss\";\n</style>\n"]}]}