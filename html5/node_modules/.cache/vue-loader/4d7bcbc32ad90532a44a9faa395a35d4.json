{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Configuration/eventSetup.vue?vue&type=style&index=0&id=4a0ac765&scoped=true&lang=scss&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Configuration/eventSetup.vue","mtime":1586417712650},{"path":"/home/neuron/build/html5/node_modules/css-loader/index.js","mtime":1578022550180},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1578022550923},{"path":"/home/neuron/build/html5/node_modules/postcss-loader/src/index.js","mtime":1578022550766},{"path":"/home/neuron/build/html5/node_modules/sass-loader/dist/cjs.js","mtime":1578022582167},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/deep/.el-input-number {\n  width: 100%;\n  &.is-without-controls .el-input__inner {\n    text-align: left;\n  }\n}\n",{"version":3,"sources":["eventSetup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwMA;AACA;AACA;AACA;AACA;AACA","file":"eventSetup.vue","sourceRoot":"src/pages/menus/Configuration","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class='flex dd-mb'>\n      <div class=\"dd-title\">Event Setup</div>\n      <div>\n        <el-button @click='handleSubmit'>submit</el-button>\n        <el-button @click='addEvent'\n                   type=\"primary\">Created</el-button>\n        <el-button @click='handleDelete'\n                   type=\"danger\">Delete</el-button>\n      </div>\n    </div>\n    <EventTable v-model=\"multipleSelection\"\n                :showBtn='true'\n                :eventList='msgd' />\n    <el-dialog title=\"Event Setup\"\n               @closed='close'\n               :visible.sync=\"dialogTableVisible\">\n      <el-form :model=\"eventForm\"\n               ref=\"eventForm\"\n               :rules=\"eventFormRules\"\n               label-width=\"120px\">\n        <el-form-item label='Object1'\n                      prop=\"sobj\">\n          <el-select v-model=\"eventForm.sobj\">\n            <el-option v-for=\"item in objectList\"\n                       :key=\"item.name\"\n                       :label=\"item.name\"\n                       :value=\"item.name\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label='Attribute1'\n                      prop=\"satt\">\n          <el-select v-model=\"eventForm.satt\">\n            <el-option v-for=\"item in filterAttrList(eventForm.sobj)\"\n                       :key=\"item+'satt'\"\n                       :label=\"item\"\n                       :value=\"item\" />\n          </el-select>\n        </el-form-item>\n        <el-form-item label='Type'\n                      prop=\"msgt\">\n          <el-select v-model=\"eventForm.msgt\">\n            <el-option v-for=\"item in Operator\"\n                       :key=\"item.val\"\n                       :label=\"item.val\"\n                       :value=\"item.val\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label='Object2'\n                      prop=\"cobj\">\n          <el-select v-model=\"eventForm.cobj\">\n            <el-option v-for=\"item in objectList\"\n                       :key=\"item.name\"\n                       :label=\"item.name\"\n                       :value=\"item.name\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label='Attribute2'\n                      prop=\"catt\">\n          <el-select v-model=\"eventForm.catt\">\n            <el-option v-for=\"item in filterAttrList(eventForm.cobj)\"\n                       :key=\"item+'catt'\"\n                       :label=\"item\"\n                       :value=\"item\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label='Category'\n                      prop=\"catt\">\n          <el-select v-model=\"eventForm.acat\">\n            <el-option v-for=\"item in EventCategory\"\n                       :key=\"item.val\"\n                       :label=\"item.val\"\n                       :value=\"item.val\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label='Subroutine'\n                      prop=\"subr\">\n          <el-input-number v-model=\"eventForm.subr\"\n                           :controls='false'\n                           :precision='0' />\n        </el-form-item>\n        <el-form-item>\n          <el-button @click='submitNewEvent'>submit</el-button>\n        </el-form-item>\n      </el-form>\n    </el-dialog>\n  </Container>\n</template>\n\n<script>\nimport indexMixin from '../mixins'\nimport { Operator, EventCategory } from '@/config/index'\nimport { clone } from '@/utils/index'\nimport { mapState, mapMutations } from 'vuex'\nimport EventTable from './components/eventTable'\nexport default {\n  mixins: [indexMixin],\n  data () {\n    return {\n      dialogTableVisible: false,\n      eventForm: {},\n      eventFormRules: {},\n      objectList: [],\n      Operator,\n      EventCategory,\n      multipleSelection: []\n    }\n  },\n  created () {\n    if (!this.resultData.length) {\n      this.$message.error('please setup object!')\n      this.$router.push({ name: 'Configuration-objectSetup' })\n    }\n    this.init()\n  },\n  computed: {\n    ...mapState({\n      resultData: state => state.SetUpData.objectData,\n      msgd: state => state.SetUpData.eventData\n    })\n  },\n  methods: {\n    init () {\n      this.buildObjectList()\n    },\n    handleSubmit () {\n      this.$router.push({ name: 'Configuration-overview' })\n    },\n    addEvent () {\n      this.dialogTableVisible = true\n    },\n    submitNewEvent () {\n      this.$refs.eventForm.validate((valid) => {\n        if (valid) {\n          this.addEventData(clone(this.eventForm))\n          this.dialogTableVisible = false\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    close () {\n      this.eventForm = {}\n      this.$refs.eventForm && this.$refs.eventForm.clearValidate()\n    },\n    buildObjectList () {\n      let list = []\n\n      for (let j = 0, jlen = this.resultData ? this.resultData.length : 0; j < jlen; j++) {\n        const data = this.resultData[j]\n        const { objn, preAndSuff, oatt } = data\n        const attr = oatt.map(i => i.attn)\n        for (let i = 0, psLen = preAndSuff.length; i < psLen; i++) {\n          let { pref, suff } = preAndSuff[i]\n          pref = pref ? pref + '_' : ''\n          suff = suff ? '_' + suff : ''\n          list.push({\n            name: pref + objn + suff,\n            attr\n          })\n        }\n      }\n      this.objectList = Object.freeze(list)\n    },\n    filterAttrList (val) {\n      if (!val) return []\n      for (let i = 0, len = this.objectList.length; i < len; i++) {\n        const item = this.objectList[i]\n        if (item.name === val) {\n          return item['attr']\n        }\n      }\n      return []\n    },\n    handleDelete () {\n      if (!this.multipleSelection.length) return\n      this.$confirm('Are you sure delete these event?', 'delete event', {\n        type: 'warning'\n      }).then(() => {\n        this.deleteEventData(this.multipleSelection)\n      }).catch(() => {\n      })\n    },\n    ...mapMutations(['addEventData', 'deleteEventData'])\n  },\n  components: {\n    EventTable\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n/deep/.el-input-number {\n  width: 100%;\n  &.is-without-controls .el-input__inner {\n    text-align: left;\n  }\n}\n</style>\n"]}]}