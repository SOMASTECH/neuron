{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/components/core/MainLayout/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/components/core/MainLayout/index.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapMutations } from 'vuex'\nexport default {\n  data () {\n    return {\n      theme: 'default',\n      collapse: false,\n      loadData: false\n    }\n  },\n  methods: {\n    initData () {\n      this.$ws().test().set({ success: this.receiveStatus }).set({ success: this.receiveAlarmList }).set({ success: this.setDevice }).set({ success: this.setData }).set({ success: this.getWritableObj })\n      setTimeout(() => {\n        this.$ws().send({\n          func: 23\n        })\n      }, 500)\n    },\n    ...mapMutations([\n      'setAllData',\n      'setAlarmStatus',\n      'setAlarmList'\n    ]),\n    setData (res) {\n      if (+res.func === 22) {\n        this.$ws().send({\n          func: 60\n        })\n        this.$ws().remove(this.setData)\n        this.setAllData(res)\n      }\n    },\n    setDevice (data) {\n      if (+data.func === 23) {\n        this.$ws().remove(this.setDevice)\n        this.$store.commit('setDeviceList', data.rows)\n      }\n    },\n    getWritableObj (data) {\n      if (+data.func === 60) {\n        this.$ws().remove(this.getWritableObj)\n        this.$store.commit('setWritableList', data.tele)\n      }\n    },\n    receiveStatus (data) {\n      if (!data.func && data.tstp) {\n        if (data.mode !== 'INACTIVE' && !this.loadData) {\n          this.loadData = true\n          this.$ws().send({\n            func: 22\n          })\n        }\n        this.setAlarmStatus(data)\n      }\n    },\n    receiveAlarmList (data) {\n      if (!data.func && data.tele) {\n        this.setAlarmList(data.tele)\n      }\n    }\n  },\n  mounted () {\n    this.initData()\n  },\n  beforeDestroy () {\n    this.$ws().remove(this.receiveStatus)\n  },\n  components: {\n    HeaderMenu: () => import('./components/HeaderMenu'),\n    HeaderRight: () => import('./components/HeaderRight'),\n    StatuBar: () => import('./components/StatuBar')\n\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"index.vue","sourceRoot":"src/components/core/MainLayout","sourcesContent":["<template>\n  <div class=\"layout-main\"\n       :class=\"theme\">\n    <div class=\"dd-layout-header\">\n      <div class=\"logo-group\">\n        <p>NEURON</p>\n        <!-- <img v-if=\"collapse\"\n             src=\"@/assets/image/logo/header-icon-only.png\">\n        <img v-else\n             src=\"@/assets/image/logo/header.png\"> -->\n      </div>\n      <!-- <el-tooltip placement=\"bottom\"\n                  v-if=\"hasSideMenu\">\n        <div slot=\"content\">{{content}}</div>\n        <div class=\"toggle-sidemenu-btn\"\n             @click=\"toggleAside\">\n          <Icon name=\"bars\"\n                :style=\"rotate\"></Icon>\n        </div>\n      </el-tooltip> -->\n      <HeaderMenu></HeaderMenu>\n      <HeaderRight></HeaderRight>\n    </div>\n    <div class=\"dd-layout-container\">\n      <!-- <div class=\"dd-layout-aside\"\n           :style=\"logoGroupStyle\"\n           v-if=\"hasSideMenu\"> -->\n      <!-- <SideMenu :collapse=\"collapse\"></SideMenu> -->\n      <!-- </div> -->\n      <div class=\"dd-layout-main\">\n        <transition name=\"fade-transverse\">\n          <!-- <keep-alive :include=\"keepAliveList\"> -->\n          <router-view></router-view>\n          <!-- </keep-alive> -->\n        </transition>\n        <StatuBar />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapMutations } from 'vuex'\nexport default {\n  data () {\n    return {\n      theme: 'default',\n      collapse: false,\n      loadData: false\n    }\n  },\n  methods: {\n    initData () {\n      this.$ws().test().set({ success: this.receiveStatus }).set({ success: this.receiveAlarmList }).set({ success: this.setDevice }).set({ success: this.setData }).set({ success: this.getWritableObj })\n      setTimeout(() => {\n        this.$ws().send({\n          func: 23\n        })\n      }, 500)\n    },\n    ...mapMutations([\n      'setAllData',\n      'setAlarmStatus',\n      'setAlarmList'\n    ]),\n    setData (res) {\n      if (+res.func === 22) {\n        this.$ws().send({\n          func: 60\n        })\n        this.$ws().remove(this.setData)\n        this.setAllData(res)\n      }\n    },\n    setDevice (data) {\n      if (+data.func === 23) {\n        this.$ws().remove(this.setDevice)\n        this.$store.commit('setDeviceList', data.rows)\n      }\n    },\n    getWritableObj (data) {\n      if (+data.func === 60) {\n        this.$ws().remove(this.getWritableObj)\n        this.$store.commit('setWritableList', data.tele)\n      }\n    },\n    receiveStatus (data) {\n      if (!data.func && data.tstp) {\n        if (data.mode !== 'INACTIVE' && !this.loadData) {\n          this.loadData = true\n          this.$ws().send({\n            func: 22\n          })\n        }\n        this.setAlarmStatus(data)\n      }\n    },\n    receiveAlarmList (data) {\n      if (!data.func && data.tele) {\n        this.setAlarmList(data.tele)\n      }\n    }\n  },\n  mounted () {\n    this.initData()\n  },\n  beforeDestroy () {\n    this.$ws().remove(this.receiveStatus)\n  },\n  components: {\n    HeaderMenu: () => import('./components/HeaderMenu'),\n    HeaderRight: () => import('./components/HeaderRight'),\n    StatuBar: () => import('./components/StatuBar')\n\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/style/theme/default.scss\";\n</style>\n"]}]}