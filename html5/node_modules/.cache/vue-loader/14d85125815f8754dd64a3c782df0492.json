{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Administration/agentGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Administration/agentGroup.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Mixins from '@/mixins'\nexport default {\n  mixins: [Mixins],\n  data () {\n    return {\n      tableData: [],\n      map: [\n        {\n          label: 'UUID',\n          val: 'uuid',\n          minWidth: '300'\n        },\n        {\n          label: 'Report date',\n          val: 'time',\n          minWidth: '160'\n        },\n        {\n          label: 'Expried data',\n          val: 'expd',\n          minWidth: '160'\n        },\n        {\n          label: 'Remain time',\n          val: 'rest',\n          minWidth: '160'\n        },\n        {\n          label: 'no. tags',\n          val: 'natt',\n          minWidth: '100'\n        },\n        {\n          label: 'total tags',\n          val: 'tatt',\n          minWidth: '100'\n        },\n        {\n          label: 'max tags',\n          val: 'matt',\n          minWidth: '100'\n        },\n        {\n          label: 'no. alarms',\n          val: 'nalr',\n          minWidth: '100'\n        },\n        {\n          label: 'total alarms',\n          val: 'talr',\n          minWidth: '100'\n        },\n        {\n          label: 'max alarms',\n          val: 'malr',\n          minWidth: '100'\n        },\n        {\n          label: 'data usage',\n          val: 'data',\n          minWidth: '120'\n        },\n        {\n          label: 'total usage',\n          val: 'tusg',\n          minWidth: '120'\n        },\n        {\n          label: 'max usage',\n          val: 'musg',\n          minWidth: '120'\n        },\n        {\n          label: 'S',\n          val: 'self',\n          minWidth: '40'\n        },\n        {\n          label: 'N',\n          val: 'mast',\n          minWidth: '40'\n        }\n      ]\n    }\n  },\n  methods: {\n    setData (data) {\n      if (data.func === 73) {\n        this.tableData = data.agts\n      }\n    }\n  },\n  mounted () {\n    this.$ws().set({ success: this.setData }).send({ func: 73 })\n  }\n}\n",{"version":3,"sources":["agentGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"agentGroup.vue","sourceRoot":"src/pages/menus/Administration","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"dd-title\">Agent Group</div>\n    <el-table :data='tableData'\n              border\n              :height='tableHeight'\n              style='width:100%;'>\n      <el-table-column v-for='item in map'\n                       :key='item.val'\n                       :prop=\"item.val\"\n                       :min-width=\"item.minWidth\"\n                       :label=\"item.label\" />\n    </el-table>\n  </Container>\n</template>\n\n<script>\nimport Mixins from '@/mixins'\nexport default {\n  mixins: [Mixins],\n  data () {\n    return {\n      tableData: [],\n      map: [\n        {\n          label: 'UUID',\n          val: 'uuid',\n          minWidth: '300'\n        },\n        {\n          label: 'Report date',\n          val: 'time',\n          minWidth: '160'\n        },\n        {\n          label: 'Expried data',\n          val: 'expd',\n          minWidth: '160'\n        },\n        {\n          label: 'Remain time',\n          val: 'rest',\n          minWidth: '160'\n        },\n        {\n          label: 'no. tags',\n          val: 'natt',\n          minWidth: '100'\n        },\n        {\n          label: 'total tags',\n          val: 'tatt',\n          minWidth: '100'\n        },\n        {\n          label: 'max tags',\n          val: 'matt',\n          minWidth: '100'\n        },\n        {\n          label: 'no. alarms',\n          val: 'nalr',\n          minWidth: '100'\n        },\n        {\n          label: 'total alarms',\n          val: 'talr',\n          minWidth: '100'\n        },\n        {\n          label: 'max alarms',\n          val: 'malr',\n          minWidth: '100'\n        },\n        {\n          label: 'data usage',\n          val: 'data',\n          minWidth: '120'\n        },\n        {\n          label: 'total usage',\n          val: 'tusg',\n          minWidth: '120'\n        },\n        {\n          label: 'max usage',\n          val: 'musg',\n          minWidth: '120'\n        },\n        {\n          label: 'S',\n          val: 'self',\n          minWidth: '40'\n        },\n        {\n          label: 'N',\n          val: 'mast',\n          minWidth: '40'\n        }\n      ]\n    }\n  },\n  methods: {\n    setData (data) {\n      if (data.func === 73) {\n        this.tableData = data.agts\n      }\n    }\n  },\n  mounted () {\n    this.$ws().set({ success: this.setData }).send({ func: 73 })\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n</style>\n"]}]}