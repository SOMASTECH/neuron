{"remainingRequest":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/components/core/Container/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/components/core/Container/index.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport BScroll from 'better-scroll'\nexport default {\n  props: {\n    type: {\n      type: String,\n      require: false,\n      default: 'card'\n    },\n    top: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    right: {\n      type: Number,\n      required: false,\n      default: 20\n    },\n    bottom: {\n      type: Number,\n      required: false,\n      default: 50\n    },\n    left: {\n      type: Number,\n      required: false,\n      default: 20\n    },\n    // 是否开启响应式尺寸变化\n    responsive: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    scorll: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  data () {\n    return {\n      BS: null\n    }\n  },\n  methods: {\n    scrollInit () {\n      this.BS = new BScroll(this.$refs.container, {\n        mouseWheel: true,\n        scrollbar: {\n          fade: true,\n          interactive: false\n        }\n      })\n    },\n    scrollDestroy () {\n      if (this.BS) {\n        this.BS.destroy()\n      }\n    }\n  },\n  mounted () {\n    if (this.type !== 'card-full') {\n      this.scrollInit()\n    }\n  },\n  beforeDestroy () {\n    if (this.type !== 'card-full') {\n      this.scrollDestroy()\n    }\n  },\n  components: {\n    CardFull: () => import('../CardFull/CardFull.vue'),\n    CardFullBs: () => import('../CardFull/CardFull-bs.vue')\n  }\n}\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/core/Container","sourcesContent":["<template>\n  <div class=\"container-component\"\n       :class=\"{responsive}\"\n       v-loading='loading'\n       ref=\"container\">\n    <!--卡片容器-->\n    <el-card v-if=\"type === 'card'\"\n             style='overflow: auto;position:relative;'>\n      <slot v-if=\"$slots.header\"\n            slot=\"header\"\n            name=\"header\"></slot>\n      <slot />\n    </el-card>\n    <!--隐形-->\n    <div v-if=\"type === 'ghost'\">\n      <slot />\n    </div>\n    <!--撑满-->\n    <card-full v-if=\"type === 'card-full' && scorll === false\"\n               :top=\"top\"\n               :right=\"right\"\n               :bottom=\"bottom\"\n               :left=\"left\">\n      <slot v-if=\"$slots.header\"\n            slot=\"header\"\n            name=\"header\"></slot>\n      <slot></slot>\n      <slot v-if=\"$slots.footer\"\n            slot=\"footer\"\n            name=\"footer\"></slot>\n    </card-full>\n    <!--撑满滚动-->\n    <card-full-bs v-if=\"type === 'card-full' && scorll === true\"\n                  :top=\"top\"\n                  :right=\"right\"\n                  :bottom=\"bottom\"\n                  :left=\"left\">\n      <slot v-if=\"$slots.header\"\n            slot=\"header\"\n            name=\"header\"></slot>\n      <slot></slot>\n      <slot v-if=\"$slots.footer\"\n            slot=\"footer\"\n            name=\"footer\"></slot>\n    </card-full-bs>\n  </div>\n</template>\n\n<script>\nimport BScroll from 'better-scroll'\nexport default {\n  props: {\n    type: {\n      type: String,\n      require: false,\n      default: 'card'\n    },\n    top: {\n      type: Number,\n      required: false,\n      default: 0\n    },\n    right: {\n      type: Number,\n      required: false,\n      default: 20\n    },\n    bottom: {\n      type: Number,\n      required: false,\n      default: 50\n    },\n    left: {\n      type: Number,\n      required: false,\n      default: 20\n    },\n    // 是否开启响应式尺寸变化\n    responsive: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    loading: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    scorll: {\n      type: Boolean,\n      required: false,\n      default: true\n    }\n  },\n  data () {\n    return {\n      BS: null\n    }\n  },\n  methods: {\n    scrollInit () {\n      this.BS = new BScroll(this.$refs.container, {\n        mouseWheel: true,\n        scrollbar: {\n          fade: true,\n          interactive: false\n        }\n      })\n    },\n    scrollDestroy () {\n      if (this.BS) {\n        this.BS.destroy()\n      }\n    }\n  },\n  mounted () {\n    if (this.type !== 'card-full') {\n      this.scrollInit()\n    }\n  },\n  beforeDestroy () {\n    if (this.type !== 'card-full') {\n      this.scrollDestroy()\n    }\n  },\n  components: {\n    CardFull: () => import('../CardFull/CardFull.vue'),\n    CardFullBs: () => import('../CardFull/CardFull-bs.vue')\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/style/public.scss\";\n.container-component {\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  overflow: hidden;\n}\n\n.container-component.responsive {\n  .dd-md-responsive {\n    @include MarginBottom($marginList);\n  }\n  .dd-mt-responsive {\n    @include MarginTop($marginList);\n  }\n}\n\n@media (min-width: 576px) {\n  // 根据你的需要在这里添加样式 xs\n}\n@media (min-width: 768px) {\n  // 根据你的需要在这里添加样式 sm\n}\n@media (min-width: 992px) {\n  // 根据你的需要在这里添加样式 md\n}\n@media (min-width: 1200px) {\n  // 根据你的需要在这里添加样式 lg\n}\n// 在大于1920分辨率的时候 xl\n@media (min-width: 1921px) {\n  // .container-component.responsive {\n  //   margin: 0px auto;\n  //   margin-bottom: 20px;\n  //   max-width: 1920px - 200px;\n  // }\n}\n</style>\n"]}]}