{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Configuration/scriptProgramming.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Configuration/scriptProgramming.vue","mtime":1586417712650},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport indexMixin from \"../mixins\";\nimport { ScriptList } from '@/config/index';\nimport ScriptTypeSelect from \"./components/scriptType\";\nexport default {\n  mixins: [indexMixin],\n  data: function data() {\n    return {\n      scriptData: [],\n      scriptList: ScriptList,\n      type: {\n        name: '',\n        subr: ''\n      },\n      dialogVisible: false,\n      pos: 0,\n      currentIndex: 0\n    };\n  },\n  methods: {\n    init: function init() {\n      this.scriptData = [];\n      var i = 6;\n\n      while (i--) {\n        this.scriptData.push({\n          stmt: '',\n          expr: ''\n        });\n      }\n    },\n    readSubroutine: function readSubroutine(subr) {\n      this.$ws().set({\n        success: this.getData\n      }).send({\n        func: 33,\n        subr: +subr\n      });\n    },\n    getData: function getData(data) {\n      if (data.func === 33) {\n        this.$ws().remove(this.getData);\n\n        if (data.rows) {\n          if (data.rows.length === 0) {\n            this.init();\n          } else {\n            this.scriptData = data.rows;\n          }\n        } else {\n          this.init();\n        }\n      }\n    },\n    handlePosSubmit: function handlePosSubmit() {\n      this.scriptData[this.currentIndex].stmt = \"POS\".concat(this.pos);\n      this.dialogVisible = false;\n    },\n    handleChange: function handleChange(e, index) {\n      if (e === 'POS') {\n        this.currentIndex = index;\n        this.dialogVisible = true;\n      }\n    },\n    handleSubmit: function handleSubmit() {\n      var _this = this;\n\n      if (!this.type.subr) {\n        this.$message.error('select a subroutine');\n        return;\n      }\n\n      this.$confirm('Are you sure submit these script programming', 'Submit', {\n        type: 'warning'\n      }).then(function () {\n        var rows = _this.scriptData;\n        var _this$type = _this.type,\n            name = _this$type.name,\n            subr = _this$type.subr;\n\n        _this.submit(name, subr, rows);\n      }).catch(function () {});\n    },\n    submit: function submit(name, subr, rows) {\n      if (!rows) {\n        rows = [];\n      }\n\n      this.$ws().set().send({\n        func: 34,\n        csub: 0,\n        name: name,\n        subr: +subr,\n        nrow: rows.length,\n        rows: rows\n      });\n    },\n    handleClosed: function handleClosed() {\n      this.currentIndex = 0;\n    },\n    add: function add(index) {\n      this.scriptData.splice(index + 1, 0, {\n        stmt: '',\n        expr: ''\n      });\n    },\n    remove: function remove(index) {\n      this.scriptData.splice(index, 1);\n    }\n  },\n  watch: {\n    'type.subr': function typeSubr(val) {\n      if (val) {\n        this.readSubroutine(val);\n      }\n    }\n  },\n  computed: {\n    tableHeight: function tableHeight() {\n      return window.innerHeight - 60 - 50 - 40 - 50;\n    }\n  },\n  components: {\n    ScriptTypeSelect: ScriptTypeSelect\n  }\n};",{"version":3,"sources":["scriptProgramming.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"flex\">\n      <div class=\"dd-title\">Script Programming</div>\n      <div class='row'>\n        <ScriptTypeSelect v-model=\"type\"\n                          @delete='init'\n                          @submit=\"submit\" />\n        &nbsp;&nbsp;\n        <el-button class='dd-fr'\n                   type=\"primary\"\n                   @click='handleSubmit'>submit</el-button>\n      </div>\n    </div>\n    <el-table class=\"scriptTable\"\n              :height='tableHeight'\n              :data='scriptData'\n              border>\n      <el-table-column label=\"statement\"\n                       min-width=\"120\">\n        <template slot-scope=\"scope\">\n          <el-select v-model=\"scope.row.stmt\"\n                     @change=\"handleChange($event,scope.$index)\"\n                     clearable\n                     style='width:100%;'>\n            <el-option v-for=\"item in scriptList\"\n                       :key=\"item.val\"\n                       :label=\"item.val\"\n                       :value=\"item.val\">\n            </el-option>\n          </el-select>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"expression\"\n                       min-width=\"300\">\n        <template slot-scope=\"scope\">\n          <el-input placeholder=\"\"\n                    v-model=\"scope.row.expr\">\n          </el-input>\n        </template>\n      </el-table-column>\n      <el-table-column label=\" \"\n                       min-width=\"60\">\n        <template slot-scope=\"scope\">\n          <div class='btn'>\n            <i class=\"el-icon-circle-plus plus\"\n               @click='add(scope.$index)'></i>&nbsp;\n            <i class=\"el-icon-remove remove\"\n               @click='remove(scope.$index)'></i>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n    <el-dialog :visible.sync=\"dialogVisible\"\n               title='POS'\n               width=\"300px\"\n               @closed='handleClosed'>\n      <el-input-number v-model=\"pos\"\n                       :min=\"1\"\n                       :max=\"999\"\n                       :controls=\"false\"></el-input-number>\n      <span slot=\"footer\"\n            class=\"dialog-footer\">\n        <el-button @click=\"dialogVisible = false\">cancel</el-button>\n        <el-button type=\"primary\"\n                   @click=\"handlePosSubmit\">submit</el-button>\n      </span>\n    </el-dialog>\n  </Container>\n</template>\n\n<script>\nimport indexMixin from '../mixins'\nimport { ScriptList } from '@/config/index'\nimport ScriptTypeSelect from './components/scriptType'\nexport default {\n  mixins: [indexMixin],\n  data () {\n    return {\n      scriptData: [],\n      scriptList: ScriptList,\n      type: {\n        name: '',\n        subr: ''\n      },\n      dialogVisible: false,\n      pos: 0,\n      currentIndex: 0\n    }\n  },\n  methods: {\n    init () {\n      this.scriptData = []\n      let i = 6\n      while (i--) {\n        this.scriptData.push({\n          stmt: '',\n          expr: ''\n        })\n      }\n    },\n    readSubroutine (subr) {\n      this.$ws().set({ success: this.getData }).send({ func: 33, subr: +subr })\n    },\n    getData (data) {\n      if (data.func === 33) {\n        this.$ws().remove(this.getData)\n        if (data.rows) {\n          if (data.rows.length === 0) {\n            this.init()\n          } else {\n            this.scriptData = data.rows\n          }\n        } else {\n          this.init()\n        }\n      }\n    },\n    handlePosSubmit () {\n      this.scriptData[this.currentIndex].stmt = `POS${this.pos}`\n      this.dialogVisible = false\n    },\n    handleChange (e, index) {\n      if (e === 'POS') {\n        this.currentIndex = index\n        this.dialogVisible = true\n      }\n    },\n    handleSubmit () {\n      if (!this.type.subr) {\n        this.$message.error('select a subroutine')\n        return\n      }\n      this.$confirm('Are you sure submit these script programming', 'Submit', {\n        type: 'warning'\n      }).then(() => {\n        const rows = this.scriptData\n        const { name, subr } = this.type\n        this.submit(name, subr, rows)\n      }).catch(() => {\n      })\n    },\n    submit (name, subr, rows) {\n      if (!rows) {\n        rows = []\n      }\n      this.$ws().set().send({\n        func: 34,\n        csub: 0,\n        name,\n        subr: +subr,\n        nrow: rows.length,\n        rows\n      })\n    },\n    handleClosed () {\n      this.currentIndex = 0\n    },\n    add (index) {\n      this.scriptData.splice(index + 1, 0, { stmt: '', expr: '' })\n    },\n    remove (index) {\n      this.scriptData.splice(index, 1)\n    }\n  },\n  watch: {\n    'type.subr' (val) {\n      if (val) {\n        this.readSubroutine(val)\n      }\n    }\n  },\n  computed: {\n    tableHeight () {\n      return window.innerHeight - 60 - 50 - 40 - 50\n    }\n  },\n  components: {\n    ScriptTypeSelect\n  }\n}\n</script>\n\n<style scoped lang='scss'>\n@import \"@/assets/style/public\";\n.scriptTable {\n  /deep/input {\n    border-color: transparent;\n  }\n  /deep/td {\n    padding: 10px 0;\n  }\n}\n.btn {\n  font-size: 24px;\n  .plus {\n    color: $color-primary;\n    cursor: pointer;\n  }\n  .remove {\n    color: $color-danger;\n    cursor: pointer;\n  }\n}\n\n/deep/.el-input-number {\n  width: 100%;\n  .el-input__inner {\n    text-align: left;\n  }\n}\n</style>\n"],"sourceRoot":"src/pages/menus/Configuration"}]}