{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Status/dataMonitoring.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Status/dataMonitoring.vue","mtime":1586417712650},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/home/neuron/build/html5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Mixins from '@/mixins';\nimport { mapState } from 'vuex';\nimport moment from 'moment';\nexport default {\n  mixins: [Mixins],\n  data: function data() {\n    return {\n      objName: '',\n      multipleSelection: [],\n      checkedAll: true\n    };\n  },\n  computed: _objectSpread({}, mapState({\n    dataList: function dataList(state) {\n      return state.Status.alarmList;\n    },\n    objectData: function objectData(state) {\n      return state.SetUpData.objectData;\n    },\n    writableList: function writableList(state) {\n      return state.Status.writableList;\n    }\n  }), {\n    tableHeight: function tableHeight() {\n      return window.innerHeight - 60 - 50 - 40 - 50;\n    },\n    objList: function objList() {\n      return this.dataList.map(function (i) {\n        return i.objn;\n      });\n    },\n    tableData: function tableData() {\n      var _this = this;\n\n      return this.dataList.filter(function (i) {\n        return i.objn === _this.objName;\n      }).map(function (i) {\n        if (i && i.tstp) {\n          i.tstp = _this.format(i.tstp);\n        }\n\n        return i;\n      });\n    },\n    tableKey: function tableKey() {\n      return Object.keys(this.tableData[0]);\n    },\n    currentWritableData: function currentWritableData() {\n      var _this2 = this;\n\n      return this.writableList.find(function (j) {\n        return j.objn === _this2.objName;\n      }) || {};\n    },\n    data: function data() {\n      var _this3 = this;\n\n      var data = [];\n      this.tableKey.forEach(function (i) {\n        if (i !== 'objn') {\n          var checked = _this3.multipleSelection.find(function (j) {\n            return j.prop === i;\n          });\n\n          data.push({\n            prop: i === 'tstp' ? 'Time' : i,\n            val: _this3.tableData[0][i],\n            writable: !!_this3.currentWritableData[i],\n            checked: checked ? checked.check : false\n          });\n        }\n      });\n      return data;\n    }\n  }),\n  watch: {\n    objList: {\n      handler: function handler(val) {\n        if (val.length && this.objName === '') {\n          this.objName = val[0];\n        }\n      }\n    },\n    objName: {\n      handler: function handler() {\n        this.multipleSelection = this.tableKey.map(function (i) {\n          return {\n            prop: i,\n            check: false\n          };\n        });\n      }\n    }\n  },\n  methods: {\n    handleWrite: function handleWrite(row) {\n      this.$refs.WriteDialog.handleShow(row.prop);\n    },\n    handleShow: function handleShow(row, type) {\n      this.$refs[type + 'ChartDialog'].handleShow(row);\n    },\n    handleCheck: function handleCheck(e, row) {\n      this.multipleSelection.forEach(function (i) {\n        if (i.prop === row.prop) {\n          i.check = e;\n        }\n      });\n    },\n    handleCheckAll: function handleCheckAll(val) {\n      this.multipleSelection.forEach(function (i) {\n        i.check = val;\n      });\n    },\n    format: function format(time) {\n      return moment(time * 1000).format('YYYY-MM-DD HH:mm:ss');\n    }\n  },\n  components: {\n    CurrentChartDialog: function CurrentChartDialog() {\n      return import(\"./components/CurrentChartDialog\");\n    },\n    HistoryChartDialog: function HistoryChartDialog() {\n      return import(\"./components/HistoryChartDialog\");\n    },\n    WriteDialog: function WriteDialog() {\n      return import(\"./components/WriteDialog\");\n    }\n  }\n};",{"version":3,"sources":["dataMonitoring.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"row flex\">\n      <div class=\"dd-title\">Data Monitoring</div>\n      <div class=\"btnGroup\">\n        <span>Object Name: </span>\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <el-select v-model=\"objName\">\n          <el-option v-for=\"item in objList\"\n                     :key=\"item\"\n                     :label=\"item\"\n                     :value=\"item\">\n          </el-option>\n        </el-select>\n        &nbsp;&nbsp;&nbsp;&nbsp;\n        <el-button @click='handleShow(null,\"History\")'>history</el-button>\n        <el-button @click='handleShow(null,\"Current\")'>current</el-button>\n      </div>\n    </div>\n    <el-table :data=\"data\"\n              v-if='tableData.length'\n              border\n              :height='tableHeight'\n              class=\"table\">\n      <el-table-column width=\"55\">\n        <template slot=\"header\">\n          <el-checkbox @change='handleCheckAll'></el-checkbox>\n        </template>\n        <template slot-scope=\"scope\">\n          <el-checkbox v-model=\"scope.row.checked\"\n                       v-if='scope.row.prop!==\"Time\"'\n                       @change='handleCheck($event,scope.row)'></el-checkbox>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"prop\"\n                       label=\"attrbute\"\n                       min-width=\"180\">\n      </el-table-column>\n      <el-table-column prop=\"val\"\n                       label=\"value\"\n                       min-width=\"180\">\n      </el-table-column>\n      <el-table-column label=\" \"\n                       width=\"170\">\n        <template slot-scope=\"scope\">\n          <div class='btn'\n               v-if=\"scope.row.prop!=='Time'\">\n            <el-button type=\"text\"\n                       v-if=\"scope.row.writable\"\n                       @click='handleWrite(scope.row)'>write</el-button>\n            <el-button type=\"text\"\n                       @click='handleShow(scope.row,\"History\")'>history</el-button>\n            <el-button type=\"text\"\n                       @click='handleShow(scope.row,\"Current\")'>current</el-button>\n          </div>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div v-else\n         class=\"noData\">\n      NO DATA\n    </div>\n    <CurrentChartDialog ref='CurrentChartDialog'\n                        :props='multipleSelection'\n                        :objName='objName' />\n    <HistoryChartDialog ref='HistoryChartDialog'\n                        :props='multipleSelection'\n                        :objName='objName' />\n    <WriteDialog ref='WriteDialog'\n                 :objName='objName' />\n  </Container>\n</template>\n\n<script>\nimport Mixins from '@/mixins'\nimport { mapState } from 'vuex'\nimport moment from 'moment'\nexport default {\n  mixins: [Mixins],\n  data () {\n    return {\n      objName: '',\n      multipleSelection: [],\n      checkedAll: true\n    }\n  },\n  computed: {\n    ...mapState({\n      dataList: state => state.Status.alarmList,\n      objectData: state => state.SetUpData.objectData,\n      writableList: state => state.Status.writableList\n    }),\n    tableHeight () {\n      return window.innerHeight - 60 - 50 - 40 - 50\n    },\n    objList () {\n      return this.dataList.map(i => i.objn)\n    },\n    tableData () {\n      return this.dataList.filter(i => i.objn === this.objName).map(i => {\n        if (i && i.tstp) {\n          i.tstp = this.format(i.tstp)\n        }\n        return i\n      })\n    },\n    tableKey () {\n      return Object.keys(this.tableData[0])\n    },\n    currentWritableData () {\n      return this.writableList.find(j => j.objn === this.objName) || {}\n    },\n    data () {\n      let data = []\n\n      this.tableKey.forEach(i => {\n        if (i !== 'objn') {\n          const checked = this.multipleSelection.find(j => j.prop === i)\n          data.push({\n            prop: i === 'tstp' ? 'Time' : i,\n            val: this.tableData[0][i],\n            writable: !!this.currentWritableData[i],\n            checked: checked ? checked.check : false\n          })\n        }\n      })\n      return data\n    }\n  },\n  watch: {\n    objList: {\n      handler (val) {\n        if (val.length && this.objName === '') {\n          this.objName = val[0]\n        }\n      }\n    },\n    objName: {\n      handler () {\n        this.multipleSelection = this.tableKey.map(i => ({\n          prop: i,\n          check: false\n        }))\n      }\n    }\n  },\n  methods: {\n    handleWrite (row) {\n      this.$refs.WriteDialog.handleShow(row.prop)\n    },\n    handleShow (row, type) {\n      this.$refs[type + 'ChartDialog'].handleShow(row)\n    },\n    handleCheck (e, row) {\n      this.multipleSelection.forEach(i => {\n        if (i.prop === row.prop) {\n          i.check = e\n        }\n      })\n    },\n    handleCheckAll (val) {\n      this.multipleSelection.forEach(i => {\n        i.check = val\n      })\n    },\n    format (time) {\n      return moment(time * 1000).format('YYYY-MM-DD HH:mm:ss')\n    }\n  },\n  components: {\n    CurrentChartDialog: () => import('./components/CurrentChartDialog'),\n    HistoryChartDialog: () => import('./components/HistoryChartDialog'),\n    WriteDialog: () => import('./components/WriteDialog')\n  }\n}\n</script>\n\n<style lang='scss' scoped>\n.table {\n  width: 100%;\n  margin-top: 20px;\n}\n.noData {\n  text-align: center;\n  margin: 50px;\n}\n.btnGroup {\n  width: 700px;\n  /deep/.el-select {\n    width: 350px;\n  }\n}\n</style>\n"],"sourceRoot":"src/pages/menus/Status"}]}