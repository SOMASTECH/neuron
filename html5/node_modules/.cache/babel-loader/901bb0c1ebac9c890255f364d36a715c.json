{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Configuration/components/objectSetup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Configuration/components/objectSetup.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.set\";\nimport _toConsumableArray from \"/home/neuron/build/html5/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/neuron/build/html5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ObjectTable from \"./objectTable\";\nimport { mapMutations } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      dialogTableVisible: false,\n      isDetail: true,\n      objectSetupFrom: {},\n      objectSetupFromRules: {\n        objn: [{\n          required: true,\n          message: 'name is required',\n          trigger: 'blur'\n        }, {\n          max: 30,\n          message: 'max 30',\n          trigger: 'blur'\n        }],\n        obsz: [{\n          required: true,\n          message: 'size is required',\n          trigger: 'blur'\n        }],\n        updt: [{\n          required: true,\n          message: 'update time is required',\n          trigger: 'blur'\n        }],\n        logt: [{\n          required: true,\n          message: 'logging time is required',\n          trigger: 'blur'\n        }],\n        disp: [{\n          required: true,\n          message: 'display is required',\n          trigger: 'blur'\n        }],\n        logs: [{\n          required: true,\n          message: 'logging is required',\n          trigger: 'blur'\n        }]\n      },\n      objectIndexSetupList: [],\n      multipleSelection: []\n    };\n  },\n  watch: {\n    'objectSetupFrom.obsz': function objectSetupFromObsz(val) {\n      var res = [];\n\n      for (var i = 0; i < val; i++) {\n        res.push({\n          obix: i,\n          pref: '',\n          suff: ''\n        });\n      }\n\n      this.objectIndexSetupList = res;\n    }\n  },\n  methods: _objectSpread({\n    submitObjectSetupFrom: function submitObjectSetupFrom() {\n      var _this = this;\n\n      this.$refs.objectSetupFrom.validate(function (valid) {\n        if (valid) {\n          _this.isDetail = false; // alert('submit!')\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    submitObjectDetail: function submitObjectDetail() {\n      var list = this.objectIndexSetupList.map(function (i) {\n        return i.pref + i.suff;\n      });\n      var length = list.length;\n\n      var newLength = _toConsumableArray(new Set(list)).length;\n\n      if (length && length === newLength) {\n        this.objectSetupFrom.preAndSuff = this.objectIndexSetupList;\n        this.addObjectData(this.objectSetupFrom);\n        this.dialogTableVisible = false;\n      } else {\n        this.$message.error(\"Don't repeat\");\n      }\n    },\n    handleCancel: function handleCancel() {\n      this.isDetail = true;\n      this.objectIndexSetupList = this.objectIndexSetupList.map(function (i) {\n        i.pref = '';\n        i.suff = '';\n        return i;\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this2 = this;\n\n      this.$confirm('Are you sure delete these object?', 'delete object', {\n        type: 'warning'\n      }).then(function () {\n        _this2.deleteObjectData(_this2.multipleSelection.map(function (i) {\n          return i.objn;\n        }));\n      }).catch(function () {});\n    },\n    close: function close() {\n      this.isDetail = true;\n      this.objectSetupFrom = {\n        oatt: []\n      };\n      this.objectIndexSetupList = [];\n      this.$refs.objectSetupFrom && this.$refs.objectSetupFrom.clearValidate();\n    }\n  }, mapMutations(['addObjectData', 'deleteObjectData'])),\n  components: {\n    ObjectTable: ObjectTable\n  }\n};",{"version":3,"sources":["objectSetup.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"dd-mb dd-fr\">\n      <el-button @click='dialogTableVisible=true'\n                 type=\"primary\">Create</el-button>\n      <el-button @click='handleDelete'\n                 type=\"danger\">Delete</el-button>\n    </div>\n    <div class=\"row\">\n      <ObjectTable :showBtn='true'\n                   v-model=\"multipleSelection\" />\n    </div>\n    <el-dialog @closed='close'\n               :title='isDetail?\"Object setup\":\"Object index setup\"'\n               :visible.sync=\"dialogTableVisible\">\n      <div class=\"row\"\n           v-if=\"isDetail\">\n        <el-form ref='objectSetupFrom'\n                 :rules=\"objectSetupFromRules\"\n                 :model=\"objectSetupFrom\"\n                 class=\"dd-mb\"\n                 label-width=\"160px\">\n          <el-form-item label=\"Object name\"\n                        prop=\"objn\">\n            <el-input v-model=\"objectSetupFrom.objn\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"Object size\"\n                        prop=\"obsz\">\n            <el-input-number v-model=\"objectSetupFrom.obsz\"\n                             :controls='false'\n                             :precision='0'\n                             :min=\"1\"\n                             :max=\"9\" />\n          </el-form-item>\n          <el-form-item label=\"Update time\"\n                        prop=\"updt\">\n            <el-input-number v-model=\"objectSetupFrom.updt\"\n                             :controls='false'\n                             :precision='0'\n                             :min=\"0\" />\n          </el-form-item>\n          <el-form-item label=\"Logging time\"\n                        prop=\"logt\">\n            <el-input-number v-model=\"objectSetupFrom.logt\"\n                             :controls='false'\n                             :precision='0'\n                             :min=\"0\" />\n          </el-form-item>\n          <el-form-item label=\"Timestamp Display\"\n                        prop=\"logt\">\n            <el-radio-group v-model=\"objectSetupFrom.tstd\">\n              <el-radio :label=\"1\">Yes</el-radio>\n              <el-radio :label=\"0\">No</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Visible\"\n                        prop=\"disp\">\n            <el-radio-group v-model=\"objectSetupFrom.disp\">\n              <el-radio :label=\"1\">Yes</el-radio>\n              <el-radio :label=\"0\">No</el-radio>\n            </el-radio-group>\n          </el-form-item>\n          <el-form-item label=\"Logging\"\n                        prop=\"logs\">\n            <el-radio-group v-model=\"objectSetupFrom.logs\">\n              <el-radio :label=\"1\">Yes</el-radio>\n              <el-radio :label=\"0\">No</el-radio>\n            </el-radio-group>\n          </el-form-item>\n        </el-form>\n        <el-button @click='submitObjectSetupFrom'>submit</el-button>\n      </div>\n      <div class=\"row\"\n           v-if=\"objectIndexSetupList.length &&!isDetail\">\n        <el-table :data='objectIndexSetupList'\n                  class=\"dd-mb\"\n                  border>\n          <el-table-column label=\"Index\">\n            <template slot-scope=\"scope\">\n              {{scope.row.obix}}\n            </template>\n          </el-table-column>\n          <el-table-column label=\"Prefix\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.pref\"></el-input>\n            </template>\n          </el-table-column>\n          <el-table-column label=\"Suffix\">\n            <template slot-scope=\"scope\">\n              <el-input v-model=\"scope.row.suff\"></el-input>\n            </template>\n          </el-table-column>\n        </el-table>\n\n        <el-button type=\"primary\"\n                   @click=\"submitObjectDetail\">submit</el-button>\n        <el-button @click=\"handleCancel\">cancel</el-button>\n\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport ObjectTable from './objectTable'\nimport { mapMutations } from 'vuex'\nexport default {\n  data () {\n    return {\n      dialogTableVisible: false,\n      isDetail: true,\n      objectSetupFrom: {},\n      objectSetupFromRules: {\n        objn: [\n          { required: true, message: 'name is required', trigger: 'blur' },\n          { max: 30, message: 'max 30', trigger: 'blur' }\n        ],\n        obsz: [\n          { required: true, message: 'size is required', trigger: 'blur' }\n        ],\n        updt: [\n          { required: true, message: 'update time is required', trigger: 'blur' }\n        ],\n        logt: [\n          { required: true, message: 'logging time is required', trigger: 'blur' }\n        ],\n        disp: [\n          { required: true, message: 'display is required', trigger: 'blur' }\n        ],\n        logs: [\n          { required: true, message: 'logging is required', trigger: 'blur' }\n        ]\n      },\n      objectIndexSetupList: [],\n      multipleSelection: []\n    }\n  },\n  watch: {\n    'objectSetupFrom.obsz' (val) {\n      let res = []\n      for (let i = 0; i < val; i++) {\n        res.push({\n          obix: i,\n          pref: '',\n          suff: ''\n        })\n      }\n      this.objectIndexSetupList = res\n    }\n  },\n  methods: {\n    submitObjectSetupFrom () {\n      this.$refs.objectSetupFrom.validate((valid) => {\n        if (valid) {\n          this.isDetail = false\n          // alert('submit!')\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    submitObjectDetail () {\n      let list = this.objectIndexSetupList.map(i => i.pref + i.suff)\n      let length = list.length\n      let newLength = [...new Set(list)].length\n      if (length && length === newLength) {\n        this.objectSetupFrom.preAndSuff = this.objectIndexSetupList\n        this.addObjectData(this.objectSetupFrom)\n        this.dialogTableVisible = false\n      } else {\n        this.$message.error(\"Don't repeat\")\n      }\n    },\n    handleCancel () {\n      this.isDetail = true\n      this.objectIndexSetupList = this.objectIndexSetupList.map(i => {\n        i.pref = ''\n        i.suff = ''\n        return i\n      })\n    },\n    handleDelete () {\n      this.$confirm('Are you sure delete these object?', 'delete object', {\n        type: 'warning'\n      }).then(() => {\n        this.deleteObjectData(this.multipleSelection.map(i => i.objn))\n      }).catch(() => {\n      })\n    },\n    close () {\n      this.isDetail = true\n      this.objectSetupFrom = {\n        oatt: []\n      }\n      this.objectIndexSetupList = []\n      this.$refs.objectSetupFrom && this.$refs.objectSetupFrom.clearValidate()\n    },\n    ...mapMutations(['addObjectData', 'deleteObjectData'])\n  },\n  components: {\n    ObjectTable\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n@import \"@/assets/style/public.scss\";\n</style>\n"],"sourceRoot":"src/pages/menus/Configuration/components"}]}