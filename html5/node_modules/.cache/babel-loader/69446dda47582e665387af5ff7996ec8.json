{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Configuration/edit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Configuration/edit.vue","mtime":1586417712650},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport _toConsumableArray from \"/home/neuron/build/html5/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _defineProperty from \"/home/neuron/build/html5/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { clone } from '@/utils/index';\nimport { AttributeTypeList } from '@/config/index';\nimport AttrbuteTable from \"./components/attrbuteTable\";\nimport { mapState, mapMutations } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      minWidth: 80,\n      objn: '',\n      preAndSuff: [],\n      dialogTableVisible: false,\n      attributeList: [],\n      AttributeSetupFrom: {},\n      AttributeSetupFromRules: {\n        attn: [{\n          required: true,\n          message: 'pleace input Name',\n          trigger: 'blur'\n        }, {\n          max: 30,\n          message: 'max 30',\n          trigger: 'blur'\n        }],\n        attt: [{\n          required: true,\n          message: 'pleace select Type',\n          trigger: 'blur'\n        }],\n        deci: [{\n          required: true,\n          message: 'pleace input Decimal',\n          trigger: 'blur'\n        }],\n        adis: [{\n          required: true,\n          message: 'pleace select Display',\n          trigger: 'blur'\n        }],\n        achg: [{\n          required: true,\n          message: 'pleace select Change',\n          trigger: 'blur'\n        }],\n        attr: [{\n          required: true,\n          message: 'pleace select Direction',\n          trigger: 'blur'\n        }],\n        rtim: [{\n          required: true,\n          message: 'pleact input Time',\n          trigger: 'blur'\n        }]\n      },\n      AttributeTypeList: AttributeTypeList,\n      addressVisible: false,\n      activeAttributeRow: {},\n      multipleSelection: []\n    };\n  },\n  methods: _objectSpread({\n    close: function close() {},\n    addressClosed: function addressClosed() {\n      this.preAndSuff.addr = '';\n    },\n    getFullName: function getFullName(pref, suff) {\n      pref = pref ? pref + '_' : '';\n      suff = suff ? '_' + suff : '';\n      return pref + this.objn + suff;\n    },\n    submitAttributeSetupFrom: function submitAttributeSetupFrom() {\n      var _this = this;\n\n      this.$refs.AttributeSetupFrom.validate(function (valid) {\n        if (valid) {\n          _this.attributeList.push(_objectSpread({}, _this.AttributeSetupFrom, {\n            aadd: clone(_this.preAndSuff)\n          }));\n\n          _this.dialogTableVisible = false;\n          _this.AttributeSetupFrom = {};\n        } else {\n          console.log('error submit!!');\n          return false;\n        }\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      this.setObjectAttribute({\n        name: this.objn,\n        attributeList: this.attributeList\n      });\n      this.$router.push({\n        name: 'Configuration-objectSetup'\n      });\n    },\n    addAddress: function addAddress(row) {\n      this.activeAttributeRow = row;\n\n      if (row.aadd.length) {\n        this.preAndSuff = clone(row.aadd);\n      }\n\n      this.addressVisible = true;\n    },\n    addressSubmit: function addressSubmit() {\n      this.addressVisible = false;\n      this.$set(this.activeAttributeRow, 'aadd', clone(this.preAndSuff));\n      this.resetPreAndSuff();\n    },\n    resetPreAndSuff: function resetPreAndSuff() {\n      this.preAndSuff = this.preAndSuff.map(function (i) {\n        i.addr = '';\n        return i;\n      });\n    },\n    handleDelete: function handleDelete() {\n      var _this2 = this;\n\n      if (!this.multipleSelection.length) return;\n      this.$confirm('Are you sure delete these attribute?', 'delete attribute', {\n        type: 'warning'\n      }).then(function () {\n        var deleteList = _this2.multipleSelection.map(function (i) {\n          return i.attn;\n        });\n\n        _this2.attributeList = _this2.attributeList.filter(function (i) {\n          return !deleteList.includes(i.attn);\n        });\n\n        _this2.setObjectAttribute({\n          name: _this2.objn,\n          attributeList: _this2.attributeList\n        });\n      }).catch(function () {});\n    },\n    handleDummy: function handleDummy() {\n      if (!this.multipleSelection.length) return;\n      this.multipleSelection.forEach(function (i) {\n        i.attr = '-';\n        i.rtim = 0;\n        i.aadd.forEach(function (j) {\n          j.addr = '-';\n          return j;\n        });\n      });\n    },\n    init: function init() {\n      var _this3 = this;\n\n      var name = this.$route.params.data;\n      console.log(name);\n\n      if (name) {\n        this.objn = name;\n        this.objectData.some(function (i) {\n          if (i.objn === name) {\n            if (i.preAndSuff) {\n              _this3.preAndSuff = _toConsumableArray(i.preAndSuff);\n            } else {\n              _this3.preAndSuff = i.oatt[0].aadd.map(function (i) {\n                return {\n                  pref: i.pref,\n                  obix: i.obix,\n                  suff: i.suff,\n                  addr: ''\n                };\n              });\n            }\n\n            if (i.oatt) {\n              _this3.attributeList = i.oatt;\n            }\n\n            return false;\n          }\n        });\n      }\n    }\n  }, mapMutations(['setObjectAttribute'])),\n  computed: _objectSpread({\n    showDecimal: function showDecimal() {\n      return this.AttributeSetupFrom.attt && this.AttributeSetupFrom.attt.indexOf('word') !== -1;\n    },\n    showReadTime: function showReadTime() {\n      return this.AttributeSetupFrom.attr && this.AttributeSetupFrom.attr !== 'W';\n    },\n    canSubmit: function canSubmit() {\n      return this.attributeList.length && this.attributeList.every(function (i) {\n        return !i.aadd.some(function (j) {\n          return j.addr === '';\n        });\n      });\n    }\n  }, mapState({\n    objectData: function objectData(state) {\n      return state.SetUpData.objectData;\n    }\n  })),\n  watch: {\n    'AttributeSetupFrom.attt': function AttributeSetupFromAttt(val) {\n      this.AttributeSetupFrom.deci = 0;\n    }\n  },\n  created: function created() {\n    this.init();\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    if (to.params.data) {\n      next();\n    } else {\n      next({\n        name: 'index'\n      });\n    }\n  },\n  components: {\n    AttrbuteTable: AttrbuteTable\n  }\n};",{"version":3,"sources":["edit.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"row flex\">\n      <div class=\"dd-title\">Attribute</div>\n      <div>\n        <el-button @click='$router.go(-1)'>Back</el-button>\n        <el-button @click='dialogTableVisible=true'\n                   type=\"primary\">Create</el-button>\n        <el-button @click='handleDelete'\n                   type=\"danger\">Delete</el-button>\n        <el-button @click='handleDummy'>Dummy</el-button>\n        <el-button @click='handleSubmit'\n                   type=\"primary\"\n                   :disabled=\"!canSubmit\">Submit</el-button>\n      </div>\n    </div>\n    <div>\n      <AttrbuteTable v-model=\"multipleSelection\"\n                     :attributeList='attributeList'\n                     :showBtn='true'\n                     :objectName='objn'\n                     @add='addAddress' />\n    </div>\n    <el-dialog title=\"Data Attribute Setup\"\n               :visible.sync=\"dialogTableVisible\"\n               @closed='close'>\n      <el-form ref='AttributeSetupFrom'\n               :model=\"AttributeSetupFrom\"\n               :rules=\"AttributeSetupFromRules\"\n               label-width=\"120px\">\n        <el-form-item label=\"Attribute name\"\n                      prop=\"attn\">\n          <el-input v-model=\"AttributeSetupFrom.attn\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"Attribute type\"\n                      prop=\"attn\">\n          <el-select v-model=\"AttributeSetupFrom.attt\">\n            <el-option v-for=\"item in AttributeTypeList\"\n                       :key=\"item.val\"\n                       :label=\"item.val\"\n                       :value=\"item.val\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n        <el-form-item label=\"Decimal\"\n                      v-if=\"showDecimal\"\n                      prop=\"deci\">\n          <el-input-number v-model=\"AttributeSetupFrom.deci\"\n                           :controls='false'\n                           :precision='0'\n                           :min=\"0\" />\n        </el-form-item>\n        <el-form-item label=\"Visible\"\n                      prop=\"adis\">\n          <el-radio-group v-model=\"AttributeSetupFrom.adis\">\n            <el-radio :label=\"1\">Yes</el-radio>\n            <el-radio :label=\"0\">No</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"Change\"\n                      prop=\"achg\">\n          <el-radio-group v-model=\"AttributeSetupFrom.achg\">\n            <el-radio :label=\"1\">Yes</el-radio>\n            <el-radio :label=\"0\">No</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"Direction\"\n                      prop=\"attr\">\n          <el-radio-group v-model=\"AttributeSetupFrom.attr\">\n            <el-radio label=\"R\">R</el-radio>\n            <el-radio label=\"W\">W</el-radio>\n            <el-radio label=\"RW\">RW</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"Read time\"\n                      prop=\"rtim\"\n                      v-if=\"showReadTime\">\n          <el-input-number v-model=\"AttributeSetupFrom.rtim\"\n                           :controls='false'\n                           :precision='0'\n                           :min=\"0\" />\n        </el-form-item>\n      </el-form>\n      <el-button @click='submitAttributeSetupFrom'>submit</el-button>\n    </el-dialog>\n    <el-dialog title=\"Data Address Setup\"\n               @closed='addressClosed'\n               :visible.sync=\"addressVisible\">\n      <el-table :data='preAndSuff'\n                class=\"dd-mb\"\n                border>\n        <el-table-column label=\"Index\"\n                         :width=\"minWidth\">\n          <template slot-scope=\"scope\">\n            {{scope.row.obix+1}}\n          </template>\n        </el-table-column>\n        <el-table-column prop=\"pref\"\n                         :width=\"minWidth\"\n                         label=\"Prefix\" />\n        <el-table-column label=\"Suffix\"\n                         :width=\"minWidth\"\n                         prop=\"suff\" />\n        <el-table-column label=\"Address\">\n          <template slot-scope=\"scope\">\n            <el-input v-model=\"scope.row.addr\"></el-input>\n          </template>\n        </el-table-column>\n      </el-table>\n      <el-button @click='addressSubmit'\n                 type=\"primary\">submit</el-button>\n    </el-dialog>\n  </Container>\n</template>\n\n<script>\nimport { clone } from '@/utils/index'\nimport { AttributeTypeList } from '@/config/index'\nimport AttrbuteTable from './components/attrbuteTable'\nimport { mapState, mapMutations } from 'vuex'\nexport default {\n  data () {\n    return {\n      minWidth: 80,\n      objn: '',\n      preAndSuff: [],\n      dialogTableVisible: false,\n      attributeList: [],\n      AttributeSetupFrom: {},\n      AttributeSetupFromRules: {\n        attn: [\n          { required: true, message: 'pleace input Name', trigger: 'blur' },\n          { max: 30, message: 'max 30', trigger: 'blur' }\n        ],\n        attt: [\n          { required: true, message: 'pleace select Type', trigger: 'blur' }\n        ],\n        deci: [\n          { required: true, message: 'pleace input Decimal', trigger: 'blur' }\n        ],\n        adis: [\n          { required: true, message: 'pleace select Display', trigger: 'blur' }\n        ],\n        achg: [\n          { required: true, message: 'pleace select Change', trigger: 'blur' }\n        ],\n        attr: [\n          { required: true, message: 'pleace select Direction', trigger: 'blur' }\n        ],\n        rtim: [\n          { required: true, message: 'pleact input Time', trigger: 'blur' }\n        ]\n      },\n      AttributeTypeList: AttributeTypeList,\n      addressVisible: false,\n      activeAttributeRow: {},\n      multipleSelection: []\n    }\n  },\n  methods: {\n    close () {\n\n    },\n    addressClosed () {\n      this.preAndSuff.addr = ''\n    },\n    getFullName (pref, suff) {\n      pref = pref ? pref + '_' : ''\n      suff = suff ? '_' + suff : ''\n      return pref + this.objn + suff\n    },\n    submitAttributeSetupFrom () {\n      this.$refs.AttributeSetupFrom.validate((valid) => {\n        if (valid) {\n          this.attributeList.push({\n            ...this.AttributeSetupFrom,\n            aadd: clone(this.preAndSuff)\n          })\n          this.dialogTableVisible = false\n          this.AttributeSetupFrom = {}\n        } else {\n          console.log('error submit!!')\n          return false\n        }\n      })\n    },\n    handleSubmit () {\n      this.setObjectAttribute({ name: this.objn, attributeList: this.attributeList })\n      this.$router.push({\n        name: 'Configuration-objectSetup'\n      })\n    },\n    addAddress (row) {\n      this.activeAttributeRow = row\n      if (row.aadd.length) {\n        this.preAndSuff = clone(row.aadd)\n      }\n      this.addressVisible = true\n    },\n    addressSubmit () {\n      this.addressVisible = false\n      this.$set(this.activeAttributeRow, 'aadd', clone(this.preAndSuff))\n      this.resetPreAndSuff()\n    },\n    resetPreAndSuff () {\n      this.preAndSuff = this.preAndSuff.map(i => {\n        i.addr = ''\n        return i\n      })\n    },\n    handleDelete () {\n      if (!this.multipleSelection.length) return\n      this.$confirm('Are you sure delete these attribute?', 'delete attribute', {\n        type: 'warning'\n      }).then(() => {\n        const deleteList = this.multipleSelection.map(i => i.attn)\n        this.attributeList = this.attributeList.filter(i => !deleteList.includes(i.attn))\n        this.setObjectAttribute({ name: this.objn, attributeList: this.attributeList })\n      }).catch(() => {\n      })\n    },\n    handleDummy () {\n      if (!this.multipleSelection.length) return\n      this.multipleSelection.forEach(i => {\n        i.attr = '-'\n        i.rtim = 0\n        i.aadd.forEach(j => {\n          j.addr = '-'\n          return j\n        })\n      })\n    },\n    init () {\n      let name = this.$route.params.data\n      console.log(name)\n      if (name) {\n        this.objn = name\n        this.objectData.some(i => {\n          if (i.objn === name) {\n            if (i.preAndSuff) {\n              this.preAndSuff = [...i.preAndSuff]\n            } else {\n              this.preAndSuff = i.oatt[0].aadd.map(i => ({\n                pref: i.pref,\n                obix: i.obix,\n                suff: i.suff,\n                addr: ''\n              }))\n            }\n            if (i.oatt) {\n              this.attributeList = i.oatt\n            }\n            return false\n          }\n        })\n      }\n    },\n    ...mapMutations(['setObjectAttribute'])\n  },\n  computed: {\n    showDecimal () {\n      return this.AttributeSetupFrom.attt && this.AttributeSetupFrom.attt.indexOf('word') !== -1\n    },\n    showReadTime () {\n      return this.AttributeSetupFrom.attr && this.AttributeSetupFrom.attr !== 'W'\n    },\n    canSubmit () {\n      return this.attributeList.length && this.attributeList.every(i => !i.aadd.some(j => j.addr === ''))\n    },\n    ...mapState({\n      objectData: state => state.SetUpData.objectData\n    })\n  },\n  watch: {\n    'AttributeSetupFrom.attt' (val) {\n      this.AttributeSetupFrom.deci = 0\n    }\n  },\n  created () {\n    this.init()\n  },\n  beforeRouteEnter (to, from, next) {\n    if (to.params.data) {\n      next()\n    } else {\n      next({ name: 'index' })\n    }\n  },\n  components: {\n    AttrbuteTable\n  }\n}\n</script>\n\n<style scoped lang='scss'>\n/deep/.el-input-number {\n  width: 100%;\n  &.is-without-controls .el-input__inner {\n    text-align: left;\n  }\n}\n.addrs {\n  border-bottom: 1px solid #ebeef5;\n  padding: 5px;\n  &:last-child {\n    border: none;\n  }\n}\n</style>\n"],"sourceRoot":"src/pages/menus/Configuration"}]}