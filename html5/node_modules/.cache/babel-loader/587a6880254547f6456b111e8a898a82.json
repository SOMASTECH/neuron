{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Administration/agentGroup.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Administration/agentGroup.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Mixins from '@/mixins';\nexport default {\n  mixins: [Mixins],\n  data: function data() {\n    return {\n      tableData: [],\n      map: [{\n        label: 'UUID',\n        val: 'uuid',\n        minWidth: '300'\n      }, {\n        label: 'Report date',\n        val: 'time',\n        minWidth: '160'\n      }, {\n        label: 'Expried data',\n        val: 'expd',\n        minWidth: '160'\n      }, {\n        label: 'Remain time',\n        val: 'rest',\n        minWidth: '160'\n      }, {\n        label: 'no. tags',\n        val: 'natt',\n        minWidth: '100'\n      }, {\n        label: 'total tags',\n        val: 'tatt',\n        minWidth: '100'\n      }, {\n        label: 'max tags',\n        val: 'matt',\n        minWidth: '100'\n      }, {\n        label: 'no. alarms',\n        val: 'nalr',\n        minWidth: '100'\n      }, {\n        label: 'total alarms',\n        val: 'talr',\n        minWidth: '100'\n      }, {\n        label: 'max alarms',\n        val: 'malr',\n        minWidth: '100'\n      }, {\n        label: 'data usage',\n        val: 'data',\n        minWidth: '120'\n      }, {\n        label: 'total usage',\n        val: 'tusg',\n        minWidth: '120'\n      }, {\n        label: 'max usage',\n        val: 'musg',\n        minWidth: '120'\n      }, {\n        label: 'S',\n        val: 'self',\n        minWidth: '40'\n      }, {\n        label: 'N',\n        val: 'mast',\n        minWidth: '40'\n      }]\n    };\n  },\n  methods: {\n    setData: function setData(data) {\n      if (data.func === 73) {\n        this.tableData = data.agts;\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.$ws().set({\n      success: this.setData\n    }).send({\n      func: 73\n    });\n  }\n};",{"version":3,"sources":["agentGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAkBA,OAAA,MAAA,MAAA,UAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,SAAA,EAAA,EADA;AAEA,MAAA,GAAA,EAAA,CACA;AACA,QAAA,KAAA,EAAA,MADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OADA,EAMA;AACA,QAAA,KAAA,EAAA,aADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OANA,EAWA;AACA,QAAA,KAAA,EAAA,cADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAXA,EAgBA;AACA,QAAA,KAAA,EAAA,aADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAhBA,EAqBA;AACA,QAAA,KAAA,EAAA,UADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OArBA,EA0BA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OA1BA,EA+BA;AACA,QAAA,KAAA,EAAA,UADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OA/BA,EAoCA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OApCA,EAyCA;AACA,QAAA,KAAA,EAAA,cADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAzCA,EA8CA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OA9CA,EAmDA;AACA,QAAA,KAAA,EAAA,YADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAnDA,EAwDA;AACA,QAAA,KAAA,EAAA,aADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAxDA,EA6DA;AACA,QAAA,KAAA,EAAA,WADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OA7DA,EAkEA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAlEA,EAuEA;AACA,QAAA,KAAA,EAAA,GADA;AAEA,QAAA,GAAA,EAAA,MAFA;AAGA,QAAA,QAAA,EAAA;AAHA,OAvEA;AAFA,KAAA;AAgFA,GAnFA;AAoFA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,mBACA,IADA,EACA;AACA,UAAA,IAAA,CAAA,IAAA,KAAA,EAAA,EAAA;AACA,aAAA,SAAA,GAAA,IAAA,CAAA,IAAA;AACA;AACA;AALA,GApFA;AA2FA,EAAA,OA3FA,qBA2FA;AACA,SAAA,GAAA,GAAA,GAAA,CAAA;AAAA,MAAA,OAAA,EAAA,KAAA;AAAA,KAAA,EAAA,IAAA,CAAA;AAAA,MAAA,IAAA,EAAA;AAAA,KAAA;AACA;AA7FA,CAAA","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"dd-title\">Agent Group</div>\n    <el-table :data='tableData'\n              border\n              :height='tableHeight'\n              style='width:100%;'>\n      <el-table-column v-for='item in map'\n                       :key='item.val'\n                       :prop=\"item.val\"\n                       :min-width=\"item.minWidth\"\n                       :label=\"item.label\" />\n    </el-table>\n  </Container>\n</template>\n\n<script>\nimport Mixins from '@/mixins'\nexport default {\n  mixins: [Mixins],\n  data () {\n    return {\n      tableData: [],\n      map: [\n        {\n          label: 'UUID',\n          val: 'uuid',\n          minWidth: '300'\n        },\n        {\n          label: 'Report date',\n          val: 'time',\n          minWidth: '160'\n        },\n        {\n          label: 'Expried data',\n          val: 'expd',\n          minWidth: '160'\n        },\n        {\n          label: 'Remain time',\n          val: 'rest',\n          minWidth: '160'\n        },\n        {\n          label: 'no. tags',\n          val: 'natt',\n          minWidth: '100'\n        },\n        {\n          label: 'total tags',\n          val: 'tatt',\n          minWidth: '100'\n        },\n        {\n          label: 'max tags',\n          val: 'matt',\n          minWidth: '100'\n        },\n        {\n          label: 'no. alarms',\n          val: 'nalr',\n          minWidth: '100'\n        },\n        {\n          label: 'total alarms',\n          val: 'talr',\n          minWidth: '100'\n        },\n        {\n          label: 'max alarms',\n          val: 'malr',\n          minWidth: '100'\n        },\n        {\n          label: 'data usage',\n          val: 'data',\n          minWidth: '120'\n        },\n        {\n          label: 'total usage',\n          val: 'tusg',\n          minWidth: '120'\n        },\n        {\n          label: 'max usage',\n          val: 'musg',\n          minWidth: '120'\n        },\n        {\n          label: 'S',\n          val: 'self',\n          minWidth: '40'\n        },\n        {\n          label: 'N',\n          val: 'mast',\n          minWidth: '40'\n        }\n      ]\n    }\n  },\n  methods: {\n    setData (data) {\n      if (data.func === 73) {\n        this.tableData = data.agts\n      }\n    }\n  },\n  mounted () {\n    this.$ws().set({ success: this.setData }).send({ func: 73 })\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n</style>\n"],"sourceRoot":"src/pages/menus/Administration"}]}