{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Administration/newPassword.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Administration/newPassword.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      passwordForm: {\n        password: '',\n        newPassword: '',\n        reNewPassword: ''\n      },\n      rules: {\n        password: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        newPassword: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }],\n        reNewPassword: [{\n          required: true,\n          message: '',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  methods: {\n    submit: function submit() {\n      var _this = this;\n\n      this.$refs.passwordForm.validate(function (valid) {\n        if (valid) {\n          var _this$passwordForm = _this.passwordForm,\n              password = _this$passwordForm.password,\n              newPassword = _this$passwordForm.newPassword,\n              reNewPassword = _this$passwordForm.reNewPassword;\n          var name = JSON.parse(sessionStorage.getItem('user')).name;\n\n          if (newPassword !== reNewPassword) {\n            _this.$message.error('error password');\n\n            return false;\n          }\n\n          _this.$ws().set({\n            success: _this.setPassword\n          }).send({\n            func: 12,\n            name: name,\n            pass: password,\n            npwd: newPassword\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n    setPassword: function setPassword(data) {\n      if (data.func === 12) {\n        this.$ws().remove(this.setPassword);\n\n        if (!data.errc) {\n          this.$message.success('success');\n        }\n\n        console.log(data);\n      }\n    }\n  }\n};",{"version":3,"sources":["newPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA;AACA,QAAA,QAAA,EAAA,EADA;AAEA,QAAA,WAAA,EAAA,EAFA;AAGA,QAAA,aAAA,EAAA;AAHA,OADA;AAMA,MAAA,KAAA,EAAA;AACA,QAAA,QAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CADA;AAEA,QAAA,WAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA,CAFA;AAGA,QAAA,aAAA,EAAA,CAAA;AAAA,UAAA,QAAA,EAAA,IAAA;AAAA,UAAA,OAAA,EAAA,EAAA;AAAA,UAAA,OAAA,EAAA;AAAA,SAAA;AAHA;AANA,KAAA;AAYA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,MADA,oBACA;AAAA;;AACA,WAAA,KAAA,CAAA,YAAA,CAAA,QAAA,CAAA,UAAA,KAAA,EAAA;AACA,YAAA,KAAA,EAAA;AAAA,mCACA,KAAA,CAAA,YADA;AAAA,cACA,QADA,sBACA,QADA;AAAA,cACA,WADA,sBACA,WADA;AAAA,cACA,aADA,sBACA,aADA;AAEA,cAAA,IAAA,GAAA,IAAA,CAAA,KAAA,CAAA,cAAA,CAAA,OAAA,CAAA,MAAA,CAAA,EAAA,IAAA;;AACA,cAAA,WAAA,KAAA,aAAA,EAAA;AACA,YAAA,KAAA,CAAA,QAAA,CAAA,KAAA,CAAA,gBAAA;;AACA,mBAAA,KAAA;AACA;;AACA,UAAA,KAAA,CAAA,GAAA,GAAA,GAAA,CAAA;AAAA,YAAA,OAAA,EAAA,KAAA,CAAA;AAAA,WAAA,EAAA,IAAA,CAAA;AAAA,YAAA,IAAA,EAAA,EAAA;AAAA,YAAA,IAAA,EAAA,IAAA;AAAA,YAAA,IAAA,EAAA,QAAA;AAAA,YAAA,IAAA,EAAA;AAAA,WAAA;AACA,SARA,MAQA;AACA,iBAAA,KAAA;AACA;AACA,OAZA;AAaA,KAfA;AAgBA,IAAA,WAhBA,uBAgBA,IAhBA,EAgBA;AACA,UAAA,IAAA,CAAA,IAAA,KAAA,EAAA,EAAA;AACA,aAAA,GAAA,GAAA,MAAA,CAAA,KAAA,WAAA;;AACA,YAAA,CAAA,IAAA,CAAA,IAAA,EAAA;AACA,eAAA,QAAA,CAAA,OAAA,CAAA,SAAA;AACA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA;AACA;AAxBA;AAfA,CAAA","sourcesContent":["<template>\n  <Container type=\"card-full\"\n             :scorll='false'>\n    <div class=\"dd-title\">New Password</div>\n    <el-form :model=\"passwordForm\"\n             :rules='rules'\n             ref=\"passwordForm\"\n             label-width=\"150px\">\n      <el-form-item prop='password'\n                    label=\"password:\">\n        <el-input v-model=\"passwordForm.password\"\n                  show-password\n                  style=\"width:300px\"></el-input>\n      </el-form-item>\n      <el-form-item prop='newPassword'\n                    label=\"newPassword:\">\n        <el-input v-model=\"passwordForm.newPassword\"\n                  show-password\n                  style=\"width:300px\"></el-input>\n      </el-form-item>\n      <el-form-item prop='reNewPassword'\n                    label=\"reNewPassword:\">\n        <el-input v-model=\"passwordForm.reNewPassword\"\n                  show-password\n                  style=\"width:300px\"></el-input>\n      </el-form-item>\n      <el-form-item>\n        <el-button @click='submit'>submit</el-button>\n      </el-form-item>\n    </el-form>\n  </Container>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      passwordForm: {\n        password: '',\n        newPassword: '',\n        reNewPassword: ''\n      },\n      rules: {\n        password: [{ required: true, message: '', trigger: 'blur' }],\n        newPassword: [{ required: true, message: '', trigger: 'blur' }],\n        reNewPassword: [{ required: true, message: '', trigger: 'blur' }]\n      }\n    }\n  },\n  methods: {\n    submit () {\n      this.$refs.passwordForm.validate((valid) => {\n        if (valid) {\n          const { password, newPassword, reNewPassword } = this.passwordForm\n          const name = JSON.parse(sessionStorage.getItem('user')).name\n          if (newPassword !== reNewPassword) {\n            this.$message.error('error password')\n            return false\n          }\n          this.$ws().set({ success: this.setPassword }).send({ func: 12, name, pass: password, npwd: newPassword })\n        } else {\n          return false\n        }\n      })\n    },\n    setPassword (data) {\n      if (data.func === 12) {\n        this.$ws().remove(this.setPassword)\n        if (!data.errc) {\n          this.$message.success('success')\n        }\n        console.log(data)\n      }\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n</style>\n"],"sourceRoot":"src/pages/menus/Administration"}]}