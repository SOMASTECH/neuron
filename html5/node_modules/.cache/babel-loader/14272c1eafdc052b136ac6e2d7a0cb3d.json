{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/neuron/build/html5/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/neuron/build/html5/src/pages/menus/Configuration/components/eventTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/neuron/build/html5/src/pages/menus/Configuration/components/eventTable.vue","mtime":1586417712646},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/vue-loader/lib/index.js","mtime":1578022550923}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Mixins from '@/mixins';\nexport default {\n  mixins: [Mixins],\n  props: {\n    value: {\n      type: Array\n    },\n    showBtn: {\n      type: Boolean,\n      default: false\n    },\n    eventList: {\n      type: Array,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      minWidth: '120',\n      multipleSelection: []\n    };\n  },\n  methods: {\n    handleSelectionChange: function handleSelectionChange(val) {\n      this.multipleSelection = val;\n      this.$emit('input', this.multipleSelection);\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.multipleSelection = val;\n    }\n  },\n  computed: {\n    tableHeight: function tableHeight() {\n      return window.innerHeight - 60 - 50 - 40 - 50;\n    }\n  }\n};",{"version":3,"sources":["eventTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkCA,OAAA,MAAA,MAAA,UAAA;AACA,eAAA;AACA,EAAA,MAAA,EAAA,CAAA,MAAA,CADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KADA;AAIA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAJA;AAQA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,KADA;AAEA,MAAA,QAAA,EAAA;AAFA;AARA,GAFA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,KADA;AAEA,MAAA,iBAAA,EAAA;AAFA,KAAA;AAIA,GApBA;AAqBA,EAAA,OAAA,EAAA;AACA,IAAA,qBADA,iCACA,GADA,EACA;AACA,WAAA,iBAAA,GAAA,GAAA;AACA,WAAA,KAAA,CAAA,OAAA,EAAA,KAAA,iBAAA;AACA;AAJA,GArBA;AA2BA,EAAA,KAAA,EAAA;AACA,IAAA,KADA,iBACA,GADA,EACA;AACA,WAAA,iBAAA,GAAA,GAAA;AACA;AAHA,GA3BA;AAgCA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,MAAA,CAAA,WAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA,GAAA,EAAA;AACA;AAHA;AAhCA,CAAA","sourcesContent":["<template>\n  <el-table :data='eventList'\n            border\n            :height='showBtn?tableHeight:null'\n            @selection-change=\"handleSelectionChange\"\n            style=\"width: 100%\">\n    <el-table-column type=\"selection\"\n                     v-if='showBtn'\n                     width=\"55\" />\n    <el-table-column :min-width=\"minWidth\"\n                     prop=\"sobj\"\n                     label=\"Object1\" />\n    <el-table-column prop=\"satt\"\n                     label=\"Attribute1\"\n                     :min-width=\"minWidth\" />\n    <el-table-column prop=\"msgt\"\n                     :min-width=\"minWidth\"\n                     label=\"Type\" />\n    <el-table-column prop=\"cobj\"\n                     :min-width=\"minWidth\"\n                     label=\"Object2\" />\n    <el-table-column prop=\"catt\"\n                     :min-width=\"minWidth\"\n                     label=\"Attribute2\" />\n    <el-table-column prop=\"acat\"\n                     :min-width=\"minWidth\"\n                     label=\"Category\" />\n    <el-table-column prop=\"subr\"\n                     :min-width=\"minWidth\"\n                     label=\"Subroutine\" />\n  </el-table>\n</template>\n\n<script>\nimport Mixins from '@/mixins'\nexport default {\n  mixins: [Mixins],\n  props: {\n    value: {\n      type: Array\n    },\n    showBtn: {\n      type: Boolean,\n      default: false\n    },\n    eventList: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      minWidth: '120',\n      multipleSelection: []\n    }\n  },\n  methods: {\n    handleSelectionChange (val) {\n      this.multipleSelection = val\n      this.$emit('input', this.multipleSelection)\n    }\n  },\n  watch: {\n    value (val) {\n      this.multipleSelection = val\n    }\n  },\n  computed: {\n    tableHeight () {\n      return window.innerHeight - 60 - 50 - 40 - 50\n    }\n  }\n}\n</script>\n\n<style scoped lang=\"scss\">\n</style>\n"],"sourceRoot":"src/pages/menus/Configuration/components"}]}