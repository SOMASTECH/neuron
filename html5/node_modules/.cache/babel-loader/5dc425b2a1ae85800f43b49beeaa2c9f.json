{"remainingRequest":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js!/home/neuron/build/html5/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/neuron/build/html5/src/plugin/ws/config.js","dependencies":[{"path":"/home/neuron/build/html5/src/plugin/ws/config.js","mtime":1586417712650},{"path":"/home/neuron/build/html5/node_modules/cache-loader/dist/cjs.js","mtime":1578022549920},{"path":"/home/neuron/build/html5/node_modules/babel-loader/lib/index.js","mtime":1578022512688},{"path":"/home/neuron/build/html5/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1578022543487}],"contextDependencies":[],"result":["var customServerBaseUrl;\n\ntry {\n  customServerBaseUrl = window.serverBaseUrl;\n} catch (e) {}\n\nvar config = {\n  isDevelopment: false,\n  isCROS: false,\n  // follow will be enabled when isCROS\n  CROS: {\n    CSRFTokenRequired: true,\n    updateCSRFTokenIn: 5 * 60 * 1000 // ms\n\n  },\n  //\n  clientBaseUrl: '/',\n  // serverBaseUrl: customServerBaseUrl || '',\n  clientLoginUrl: null\n};\n\nswitch (process.env.NODE_ENV) {\n  case 'production':\n    Object.assign(config, {\n      serverBaseUrl: customServerBaseUrl || \"ws://\".concat(window.location.hostname, \":\").concat(window.location.port, \"/\")\n    });\n    break;\n\n  case 'development':\n    Object.assign(config, {\n      isDevelopment: true,\n      serverBaseUrl: 'ws://192.168.234.176:7681/'\n    });\n    break;\n}\n\nexport default config;",{"version":3,"sources":["/home/neuron/build/html5/src/plugin/ws/config.js"],"names":["customServerBaseUrl","window","serverBaseUrl","e","config","isDevelopment","isCROS","CROS","CSRFTokenRequired","updateCSRFTokenIn","clientBaseUrl","clientLoginUrl","process","env","NODE_ENV","Object","assign","location","hostname","port"],"mappings":"AAAA,IAAIA,mBAAJ;;AACA,IAAI;AACFA,EAAAA,mBAAmB,GAAGC,MAAM,CAACC,aAA7B;AACD,CAFD,CAEE,OAAOC,CAAP,EAAU,CAAE;;AAEd,IAAMC,MAAM,GAAG;AACbC,EAAAA,aAAa,EAAE,KADF;AAEbC,EAAAA,MAAM,EAAE,KAFK;AAGb;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,iBAAiB,EAAE,IADf;AAEJC,IAAAA,iBAAiB,EAAE,IAAI,EAAJ,GAAS,IAFxB,CAE6B;;AAF7B,GAJO;AAQb;AACAC,EAAAA,aAAa,EAAE,GATF;AAUb;AACAC,EAAAA,cAAc,EAAE;AAXH,CAAf;;AAaA,QAAQC,OAAO,CAACC,GAAR,CAAYC,QAApB;AACE,OAAK,YAAL;AACEC,IAAAA,MAAM,CAACC,MAAP,CAAcZ,MAAd,EAAsB;AACpBF,MAAAA,aAAa,EAAEF,mBAAmB,mBAAYC,MAAM,CAACgB,QAAP,CAAgBC,QAA5B,cAAwCjB,MAAM,CAACgB,QAAP,CAAgBE,IAAxD;AADd,KAAtB;AAGA;;AACF,OAAK,aAAL;AACEJ,IAAAA,MAAM,CAACC,MAAP,CAAcZ,MAAd,EAAsB;AACpBC,MAAAA,aAAa,EAAE,IADK;AAEpBH,MAAAA,aAAa,EAAE;AAFK,KAAtB;AAIA;AAXJ;;AAaA,eAAeE,MAAf","sourcesContent":["let customServerBaseUrl\ntry {\n  customServerBaseUrl = window.serverBaseUrl\n} catch (e) {}\n\nconst config = {\n  isDevelopment: false,\n  isCROS: false,\n  // follow will be enabled when isCROS\n  CROS: {\n    CSRFTokenRequired: true,\n    updateCSRFTokenIn: 5 * 60 * 1000 // ms\n  },\n  //\n  clientBaseUrl: '/',\n  // serverBaseUrl: customServerBaseUrl || '',\n  clientLoginUrl: null\n}\nswitch (process.env.NODE_ENV) {\n  case 'production':\n    Object.assign(config, {\n      serverBaseUrl: customServerBaseUrl || `ws://${window.location.hostname}:${window.location.port}/`\n    })\n    break\n  case 'development':\n    Object.assign(config, {\n      isDevelopment: true,\n      serverBaseUrl: 'ws://192.168.234.176:7681/'\n    })\n    break\n}\nexport default config\n"]}]}